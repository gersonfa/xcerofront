{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/BasesComponent/BaseComponent/AreasComponent/areas.component.html","./src/app/BasesComponent/BaseComponent/AreasComponent/areas.component.ts","./src/app/BasesComponent/BaseComponent/ColoniesComponent/colonies.component.html","./src/app/BasesComponent/BaseComponent/ColoniesComponent/colonies.component.ts","./src/app/BasesComponent/BaseComponent/GroupComponent/group.component.html","./src/app/BasesComponent/BaseComponent/GroupComponent/group.component.ts","./src/app/BasesComponent/BaseComponent/GroupsComponent/groups.component.html","./src/app/BasesComponent/BaseComponent/GroupsComponent/groups.component.ts","./src/app/BasesComponent/BaseComponent/base.component.html","./src/app/BasesComponent/BaseComponent/base.component.ts","./src/app/BasesComponent/BaseCreateComponent/base.create.component.html","./src/app/BasesComponent/BaseCreateComponent/base.create.component.ts","./src/app/BasesComponent/bases.component.html","./src/app/BasesComponent/bases.component.ts","./src/app/DashboradComponent/dashboard.component.css","./src/app/DashboradComponent/dashboard.component.html","./src/app/DashboradComponent/dashboard.component.ts","./src/app/DriversComponent/DriverComponent/CommentsComponent/comments.component.html","./src/app/DriversComponent/DriverComponent/CommentsComponent/comments.component.ts","./src/app/DriversComponent/DriverComponent/MessagesComponent/messages.component.html","./src/app/DriversComponent/DriverComponent/MessagesComponent/messages.component.ts","./src/app/DriversComponent/DriverComponent/ReportsComponent/reports.component.html","./src/app/DriversComponent/DriverComponent/ReportsComponent/reports.component.ts","./src/app/DriversComponent/DriverComponent/ServicesComponent/services.component.html","./src/app/DriversComponent/DriverComponent/ServicesComponent/services.component.ts","./src/app/DriversComponent/DriverComponent/driver.component.html","./src/app/DriversComponent/DriverComponent/driver.component.ts","./src/app/DriversComponent/DriverFormComponent/driver.form.component.html","./src/app/DriversComponent/DriverFormComponent/driver.form.component.ts","./src/app/DriversComponent/drivers.component.html","./src/app/DriversComponent/drivers.component.ts","./src/app/GlobalServicesComponent/global.services.component.html","./src/app/GlobalServicesComponent/global.services.component.ts","./src/app/LoginComponent/login.component.html","./src/app/LoginComponent/login.component.ts","./src/app/NoticeComponent/notice.component.html","./src/app/NoticeComponent/notice.component.ts","./src/app/PlacesComponent/places.component.html","./src/app/PlacesComponent/places.component.ts","./src/app/ReportDriversComponent/report.driver.component.ts","./src/app/ReportDriversComponent/report.drivers.component.html","./src/app/TariffComponent/CheckTariffComponent/check.tariff.component.html","./src/app/TariffComponent/CheckTariffComponent/check.tariff.component.ts","./src/app/TariffComponent/EditTariffComponent/edit.tariff.component.html","./src/app/TariffComponent/EditTariffComponent/edit.tariff.component.ts","./src/app/TariffComponent/SearchTariff/search.tariff.component.ts","./src/app/TariffComponent/SearchTariff/search.teriff.component.html","./src/app/TariffComponent/tariff.component.html","./src/app/TariffComponent/tariff.component.ts","./src/app/_guards/authentication.guard.ts","./src/app/_services/API_URL.ts","./src/app/_services/area.service.ts","./src/app/_services/authentication.service.ts","./src/app/_services/bases.service.ts","./src/app/_services/colony.service.ts","./src/app/_services/drivers.service.ts","./src/app/_services/group.service.ts","./src/app/_services/places.service.ts","./src/app/_services/site.service.ts","./src/app/_services/tariff.service.ts","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"<div class=\\\"ui grid\\\" style=\\\"height: 100%;\\\">\\r\\n  <div class=\\\"two wide column\\\">\\r\\n\\r\\n      <div class=\\\"ui list\\\">\\r\\n          <div class=\\\"item\\\" *ngFor=\\\"let area of areas_show()\\\" [ngClass]=\\\"{'selected': area._id == selected_polygon._id}\\\">\\r\\n            <div class=\\\"header\\\"> <i style=\\\"color: red; cursor: pointer;\\\" (click)=\\\"delete_polygon(area)\\\">x</i> {{area.name}}</div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n      <h5 *ngIf=\\\"polygons.length == 0\\\" style=\\\"margin-top: 2em;\\\">\\r\\n          Aún no hay áreas registradas en este grupo.\\r\\n        </h5>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"fourteen wide column\\\">\\r\\n    <div>\\r\\n        <div class=\\\"ui form\\\" style=\\\"display: inline-block; width: 70%; margin-bottom: -3em;\\\" *ngIf=\\\"creating\\\">\\r\\n              <div class=\\\"field\\\">\\r\\n                <input type=\\\"text\\\" placeholder=\\\"Nombre área\\\" [(ngModel)]=\\\"name\\\">\\r\\n              </div>\\r\\n          </div>\\r\\n\\r\\n          <button class=\\\"ui button yellow\\\" icon=\\\"plus\\\" style=\\\"display: inline-block;\\r\\n              float: right;\\\" (click)=\\\"new_polygon()\\\" *ngIf=\\\"!creating\\\">Nueva area</button>\\r\\n\\r\\n          <button class=\\\"ui button red\\\" icon=\\\"plus\\\" style=\\\"display: inline-block;\\r\\n      float: right;\\\" (click)=\\\"cancel_polygon()\\\" *ngIf=\\\"creating\\\">Cancelar</button>\\r\\n\\r\\n<button class=\\\"ui button yellow\\\" icon=\\\"plus\\\" style=\\\"display: inline-block;\\r\\nfloat: right;\\\" (click)=\\\"save_polygon()\\\"  *ngIf=\\\"creating\\\" [disabled]=\\\"!name\\\" [ngClass]=\\\"{'loading disabled': loading}\\\">Guardar</button>\\r\\n    </div>\\r\\n\\r\\n    <div style=\\\"margin-top: 3em;\\\">\\r\\n        <agm-map #AGM [latitude]=\\\"latitude\\\" [longitude]=\\\"longitude\\\" [scrollwheel]=\\\"false\\\" [zoom]=\\\"zoom\\\">\\r\\n          \\t<agm-polygon (polyClick)=\\\"select_polygon(area)\\\" *ngFor=\\\"let area of polygons\\\" [paths]=\\\"area.paths\\\" [fillColor]=\\\"area.group != group_id ? 'yellow': 'black'\\\"></agm-polygon>\\r\\n          </agm-map>\\r\\n    </div>\\r\\n\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<style>\\r\\n  agm-map {\\r\\n    height: 600px;\\r\\n  }\\r\\n\\r\\n  .selected {\\r\\n    background-color: orange;\\r\\n  }\\r\\n</style>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/BasesComponent/BaseComponent/AreasComponent/areas.component.html\n// module id = ./src/app/BasesComponent/BaseComponent/AreasComponent/areas.component.html\n// module chunks = main","import { Component, OnInit, ViewChild, OnDestroy } from \"@angular/core\";\r\nimport { LatLngLiteral, GoogleMapsAPIWrapper } from \"@agm/core\";\r\nimport { AreaService } from \"../../../_services/area.service\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\n\r\n@Component({\r\n  templateUrl: './areas.component.html'\r\n})\r\n\r\nexport class AreasComponent implements OnInit, OnDestroy {\r\n  zoom = 11;\r\n  latitude = 19.0443254;\r\n  longitude = -98.2019682;\r\n\r\n  group_id: string;\r\n  sub: any;\r\n\r\n  paths: LatLngLiteral[] = [\r\n    {lat: 19.059588, lng: -98.617376 },\r\n    {lat: 19.029136, lng: -98.571992 },\r\n    {lat: 19.037514, lng: -98.618716}\r\n  ];\r\n\r\n  polygon: any;\r\n  polygons: any[] = [];\r\n  name: string = '';\r\n\r\n  creating: boolean = false;\r\n  loading: boolean = false;\r\n\r\n  selected_polygon: any = {};\r\n\r\n  @ViewChild('AGM') agm: any;\r\n\r\n  constructor(\r\n    private areaService: AreaService,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n\r\n  new_polygon() {\r\n    this.creating = true;\r\n    this.agm._mapsWrapper.createPolygon({\r\n      paths: this.paths,\r\n      draggable: true,\r\n      geodesic: true,\r\n      editable: true\r\n    }).then((polygon: any) => {\r\n      this.polygon = polygon;\r\n    });\r\n  }\r\n\r\n  cancel_polygon() {\r\n    this.creating = false;\r\n    this.name = '';\r\n    this.polygon.setMap(null);\r\n  }\r\n\r\n  delete_polygon(area) {\r\n    this.areaService.area_delete(area._id).subscribe(\r\n      poly => {\r\n        this.polygons = this.polygons.filter(p => p._id !== poly._id);\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  save_polygon() {\r\n    let paths = [];\r\n    this.polygon.getPath().b.map(obj => console.log);\r\n    for (let i = 0; i < this.polygon.getPath().getLength(); i++) {\r\n      const point = {\r\n        lat: this.polygon.getPath().getAt(i).lat(),\r\n        lng: this.polygon.getPath().getAt(i).lng(),\r\n      };\r\n      paths.push(point);\r\n    }\r\n\r\n    const polygon = {\r\n      name: this.name,\r\n      paths: paths\r\n    };\r\n\r\n    this.areaService.area_create(this.group_id, polygon).subscribe(\r\n      area => {\r\n        this.polygons.push(area);\r\n        this.polygon.setMap(null);\r\n        this.name = '';\r\n        this.creating = false;\r\n      }\r\n    )\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.sub = this.route.parent.params.subscribe(params => {\r\n      this.group_id = params['id'];\r\n    })\r\n\r\n    this.areaService.area_list().subscribe(\r\n      areas => this.polygons = areas\r\n    )\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.sub.unsubscribe()\r\n  }\r\n\r\n  areas_show() {\r\n    return this.polygons.filter(p => p.group === this.group_id);\r\n  }\r\n\r\n  select_polygon(p) {\r\n    this.selected_polygon = p;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/BasesComponent/BaseComponent/AreasComponent/areas.component.ts","module.exports = \"<div class=\\\"ui grid\\\" style=\\\"height: 100%;\\\">\\r\\n    <div class=\\\"two wide column\\\">\\r\\n        <sm-list class=\\\"divided\\\">\\r\\n          <sm-item *ngFor=\\\"let colony of colonies\\\">\\r\\n            <i style=\\\"color: red; cursor: pointer;\\\" (click)=\\\"delete_colony(colony)\\\">x</i>\\r\\n            {{colony.label}}\\r\\n          </sm-item>\\r\\n        </sm-list>\\r\\n\\r\\n        <h5 *ngIf=\\\"colonies.length == 0\\\">\\r\\n          Aún no hay colonias registradas en este grupo.\\r\\n        </h5>\\r\\n\\r\\n\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"fourteen wide column\\\">\\r\\n         <agm-map [latitude]=\\\"latitude\\\" [longitude]=\\\"longitude\\\" [scrollwheel]=\\\"false\\\" [zoom]=\\\"zoom\\\">\\r\\n          <agm-marker *ngFor=\\\"let colony of colonies\\\" [label]=\\\"colony.label\\\" [latitude]=\\\"colony.latitude\\\" [longitude]=\\\"colony.longitude\\\"></agm-marker>\\r\\n        </agm-map>\\r\\n        <br>\\r\\n        <form [formGroup]=\\\"colonyForm\\\">\\r\\n          <div class=\\\"ui input fluid\\\">\\r\\n            <input type=\\\"text\\\" #search formControlName=\\\"name\\\">\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/BasesComponent/BaseComponent/ColoniesComponent/colonies.component.html\n// module id = ./src/app/BasesComponent/BaseComponent/ColoniesComponent/colonies.component.html\n// module chunks = main","import {\r\n  Component,\r\n  OnInit,\r\n  NgZone,\r\n  ElementRef,\r\n  ViewChild,\r\n  OnDestroy\r\n} from \"@angular/core\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  FormControl,\r\n  Validators\r\n} from \"@angular/forms\";\r\nimport { MapsAPILoader } from \"@agm/core\";\r\nimport { SnotifyService } from \"ng-snotify\";\r\nimport { ColonyService } from \"../../../_services/colony.service\";\r\nimport { Group } from \"../../../_models/group\";\r\n\r\n@Component({\r\n  templateUrl: \"./colonies.component.html\"\r\n})\r\nexport class ColoniesComponent implements OnInit, OnDestroy {\r\n  public groups: Group[] = [];\r\n  public base_id: string;\r\n  public subscription: any;\r\n\r\n  public new_group_name: string = \"\";\r\n\r\n  public latitude: number;\r\n  public longitude: number;\r\n  public zoom: number;\r\n\r\n  @ViewChild(\"search\")\r\n  public searchElementRef: ElementRef;\r\n\r\n  public colonyForm: FormGroup;\r\n  public name: FormControl;\r\n\r\n  public colonies: any[] = [];\r\n\r\n  public group_id: any;\r\n\r\n  constructor(\r\n    private colonyService: ColonyService,\r\n    private route: ActivatedRoute,\r\n    private fb: FormBuilder,\r\n    private mapsAPILoader: MapsAPILoader,\r\n    private ngZone: NgZone,\r\n    private snotifyService: SnotifyService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.zoom = 9;\r\n    this.latitude = 18.703139;\r\n    this.longitude = -97.911509;\r\n\r\n    this.subscription = this.route.parent.params.subscribe(params => {\r\n      this.group_id = params[\"id\"];\r\n      this.colonyService.colony_by_group(this.group_id).subscribe(colonies => {\r\n        this.colonies = [];\r\n        colonies.map(colony => {\r\n          const marker = {\r\n            longitude: Number(colony.coords[0]),\r\n            latitude: Number(colony.coords[1]),\r\n            label: colony.name,\r\n            _id: colony._id\r\n          };\r\n          this.colonies.push(marker);\r\n        });\r\n      });\r\n    });\r\n\r\n    this.name = this.fb.control(\"\", Validators.required);\r\n\r\n    this.colonyForm = this.fb.group({\r\n      name: this.name,\r\n      place_id: \"\",\r\n      lat: \"\",\r\n      lng: \"\"\r\n    });\r\n\r\n    this.mapsAPILoader.load().then(() => {\r\n      let autocomplete = new google.maps.places.Autocomplete(\r\n        this.searchElementRef.nativeElement,\r\n        {\r\n          types: [\"(regions)\"]\r\n        }\r\n      );\r\n      autocomplete.addListener(\"place_changed\", () => {\r\n        this.ngZone.run(() => {\r\n          //get the place result\r\n          let place: google.maps.places.PlaceResult = autocomplete.getPlace();\r\n\r\n          //verify result\r\n          if (place.geometry === undefined || place.geometry === null) {\r\n            return;\r\n          }\r\n\r\n          this.name.setValue(place.name);\r\n          this.colonyForm.value.place_id = place.place_id;\r\n          this.colonyForm.value.lat = place.geometry.location.lat();\r\n          this.colonyForm.value.lng = place.geometry.location.lng();\r\n\r\n          this.colonyService\r\n            .colony_create(this.group_id, this.colonyForm.value)\r\n            .subscribe(\r\n              colony => {\r\n                const marker = {\r\n                  longitude: Number(colony.coords[0]),\r\n                  latitude: Number(colony.coords[1]),\r\n                  label: colony.name,\r\n                  _id: colony._id\r\n                };\r\n\r\n                this.colonies.push(marker);\r\n                this.colonyForm.reset();\r\n              },\r\n              error => {\r\n                const body = JSON.parse(error._body);\r\n                console.log(body);\r\n                if (body.error.includes(\"duplicate key\")) {\r\n                  this.snotifyService.error(\"La colonia ya esta registrada.\");\r\n                }\r\n              }\r\n            );\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  delete_colony(colony) {\r\n    this.colonyService\r\n      .colony_delete(colony._id)\r\n      .subscribe(\r\n        colony_deleted =>\r\n          (this.colonies = this.colonies.filter(\r\n            c => c._id !== colony_deleted._id\r\n          ))\r\n      );\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/BasesComponent/BaseComponent/ColoniesComponent/colonies.component.ts","module.exports = \"<div class=\\\"fourteen wide column\\\" style=\\\"padding-left: 0;\\\">\\r\\n  <div class=\\\"ui grid\\\">\\r\\n    <div class=\\\"sixteen wide column\\\">\\r\\n      <!-- <div class=\\\"ui secondary pointing menu\\\">\\r\\n        <a class=\\\"item\\\" routerLink=\\\"colonies\\\" routerLinkActive=\\\"active\\\">\\r\\n          Colonias\\r\\n        </a>\\r\\n        <a class=\\\"item\\\" routerLink=\\\"areas\\\" routerLinkActive=\\\"active\\\">\\r\\n          Areas\\r\\n        </a>\\r\\n      </div> -->\\r\\n      <router-outlet></router-outlet>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/BasesComponent/BaseComponent/GroupComponent/group.component.html\n// module id = ./src/app/BasesComponent/BaseComponent/GroupComponent/group.component.html\n// module chunks = main","import { Component, OnChanges, OnInit } from \"@angular/core\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\n\r\n@Component({\r\n  templateUrl: './group.component.html'\r\n})\r\n\r\nexport class GroupComponent   {\r\n  constructor(\r\n  ) {}\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/BasesComponent/BaseComponent/GroupComponent/group.component.ts","module.exports = \"<div class=\\\"ui grid\\\" style=\\\"height: 80vh;\\\">\\r\\n  <!-- <sm-list class=\\\"divided\\\">\\r\\n      <sm-item *ngFor=\\\"let group of groups\\\" [ngClass]=\\\"{'item-selected': group.name === group_selected?.name}\\\" (click)=\\\"selecte_group(group)\\\">\\r\\n        <i style=\\\"color: red; cursor: pointer;\\\" (click)=\\\"group_selected = group; confirmDeleteGroup.show();\\\">x</i>\\r\\n        {{group.name}}\\r\\n      </sm-item>\\r\\n    </sm-list> -->\\r\\n  <div class=\\\"two wide column\\\">\\r\\n    <sm-button class=\\\"fluid yellow\\\" icon=\\\"plus\\\" (click)=\\\"createGroupModel.show({inverted: false})\\\">Nuevo grupo</sm-button>\\r\\n    <br>\\r\\n    <div class=\\\"ui vertical fluid tabular menu\\\" style=\\\"height: 80%;\\\">\\r\\n      <a class=\\\"item\\\" *ngFor=\\\"let group of groups\\\" routerLink=\\\"/dashboard/base/{{base_id}}/groups/group/{{group._id}}\\\"\\r\\n         routerLinkActive=\\\"active\\\">\\r\\n        {{group.name}}\\r\\n      </a>\\r\\n    </div>\\r\\n\\r\\n    <h5 *ngIf=\\\"groups.length == 0\\\">\\r\\n      Aún no hay grupos registrados.\\r\\n    </h5>\\r\\n  </div>\\r\\n  <div class=\\\"fourteen wide stretched column\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <sm-modal title=\\\"Nuevo grupo\\\" #createGroupModel>\\r\\n    <modal-content>\\r\\n      <div class=\\\"ui fluid input\\\">\\r\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"new_group_name\\\" placeholder=\\\"Ingresa nombre de grupo\\\">\\r\\n      </div>\\r\\n    </modal-content>\\r\\n\\r\\n    <modal-actions>\\r\\n      <div class=\\\"ui buttons\\\">\\r\\n        <button class=\\\"ui negative button\\\" (click)=\\\"createGroupModel.hide()\\\">Cancelar</button>\\r\\n        <button class=\\\"ui button primary\\\" [disabled]=\\\"!new_group_name\\\" (click)=\\\"create_group(); createGroupModel.hide();\\\" style=\\\"margin-left: 10px;\\\">Guardar\\r\\n          grupo\\r\\n        </button>\\r\\n      </div>\\r\\n    </modal-actions>\\r\\n  </sm-modal>\\r\\n\\r\\n  <sm-modal class=\\\"basic\\\" title=\\\"Eliminar grupo\\\" #confirmDeleteGroup>\\r\\n    <modal-content>\\r\\n      <p>Se eliminaran las colonias y tarifas relacionadas a este grupo.</p>\\r\\n    </modal-content>\\r\\n\\r\\n    <modal-actions>\\r\\n      <div class=\\\"ui buttons\\\">\\r\\n        <button class=\\\"ui button\\\" (click)=\\\"confirmDeleteGroup.hide()\\\">Cancelar</button>\\r\\n        <button class=\\\"ui button negative\\\" (click)=\\\"delete_group(); confirmDeleteGroup.hide();\\\" style=\\\"margin-left: 10px;\\\">Eliminar\\r\\n          grupo\\r\\n        </button>\\r\\n      </div>\\r\\n    </modal-actions>\\r\\n  </sm-modal>\\r\\n\\r\\n  <style>\\r\\n    .item-selected {\\r\\n      background-color: #FFF8E1;\\r\\n    }\\r\\n  </style>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/BasesComponent/BaseComponent/GroupsComponent/groups.component.html\n// module id = ./src/app/BasesComponent/BaseComponent/GroupsComponent/groups.component.html\n// module chunks = main","import { Component, OnInit, OnDestroy, ViewChild, ElementRef, NgZone, OnChanges } from \"@angular/core\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { Group } from \"../../../_models/group\";\r\nimport { GroupService } from \"../../../_services/group.service\";\r\nimport { FormControl, FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { MapsAPILoader } from \"@agm/core\";\r\nimport { } from \"@types/googlemaps\";\r\nimport { ColonyService } from \"../../../_services/colony.service\";\r\nimport {SnotifyService} from 'ng-snotify'\r\n\r\n@Component({\r\n  templateUrl: './groups.component.html'\r\n})\r\n\r\nexport class GroupsComponent implements OnInit, OnDestroy {\r\n  public groups: Group[] = [];\r\n  public base_id: string;\r\n  public subscription: any;\r\n\r\n  public new_group_name: string = '';\r\n\r\n  public latitude: number;\r\n  public longitude: number;\r\n  public zoom: number;\r\n\r\n  @ViewChild(\"search\") public searchElementRef: ElementRef;\r\n  public group_selected: Group;\r\n\r\n  public colonyForm: FormGroup;\r\n  public name: FormControl;\r\n\r\n  public colonies: any[] = [];\r\n\r\n  public selected_group: any;\r\n  public url: string = '';\r\n\r\n  constructor(\r\n    private groupService: GroupService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.subscription = this.route.parent.params.subscribe(params => {\r\n      this.base_id = params['id'];\r\n    });\r\n\r\n    this.groupService.group_by_base(this.base_id).subscribe(\r\n      groups => {\r\n        this.groups = groups;\r\n        if (this.groups.length > 0) {\r\n          //this.group_selected = groups[0];\r\n          this.router.navigate([`/dashboard/base/${this.base_id}/groups/group/${this.groups[0]._id}`]);\r\n        }\r\n      }\r\n    )\r\n\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n\r\n  create_group() {\r\n    this.groupService.group_create(this.base_id, { name: this.new_group_name }).subscribe(\r\n      group => {\r\n        this.groups.push(group)\r\n        this.new_group_name = ''\r\n      }\r\n    )\r\n  }\r\n\r\n  delete_group() {\r\n    this.groupService.group_delete(this.base_id, this.group_selected._id).subscribe(\r\n      group => {\r\n        this.groups = this.groups.filter(g => g._id != group._id);\r\n        if (this.groups.length > 0) {\r\n\r\n        } else {\r\n          this.colonies = []\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/BasesComponent/BaseComponent/GroupsComponent/groups.component.ts","module.exports = \"<div class=\\\"ui padded grid\\\">\\r\\n  <div class=\\\"thirteen wide column\\\">\\r\\n    <div class=\\\"ui large breadcrumb\\\">\\r\\n      <a class=\\\"section\\\" routerLink=\\\"/dashboard/bases\\\">Bases</a>\\r\\n      <i class=\\\"right chevron icon divider\\\"></i>\\r\\n      <div class=\\\"active section\\\">{{base?.name}}</div>\\r\\n    </div>\\r\\n    <button class=\\\"ui red button\\\" style=\\\"float: right;\\\" (click)=\\\"modal.show()\\\">Eliminar base</button>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"thirteen wide column\\\">\\r\\n      <router-outlet></router-outlet>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"ui three wide column\\\" style=\\\"border-left: 2px solid black;\\\" *ngIf=\\\"base\\\">\\r\\n    <h3>En formación</h3>\\r\\n\\r\\n    <p *ngIf=\\\"base?.stack.length == 0\\\">No hay conductores en formación</p>\\r\\n\\r\\n    <div class=\\\"ui ordered relaxed divided list\\\">\\r\\n      <div class=\\\"item\\\" *ngFor=\\\"let unit of base.stack\\\">\\r\\n        <div class=\\\"content\\\">\\r\\n          <p class=\\\"header\\\">{{unit.full_name}} {{unit.unit_number}}</p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <button (click)=\\\"empty_base()\\\" class=\\\"ui fluid yellow button\\\" [disabled]=\\\"base.stack.length == 0\\\">Vaciar base</button>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<sm-modal class=\\\"basic\\\" #modal>\\r\\n  <modal-content>\\r\\n      <h2>¿Estás seguro de querer borrar la base?</h2>\\r\\n      <p>IMPORTANTE: Se eliminaran los grupos, colonias, lugares y tarifas relacionadas a esta base.</p>\\r\\n  </modal-content>\\r\\n  <modal-actions>\\r\\n    <button class=\\\"ui button\\\" style=\\\"margin-right: 10px;\\\" (click)=\\\"modal.hide()\\\">Cancelar</button>\\r\\n    <button class=\\\"ui button red\\\" (click)=\\\"baseDelete(modal)\\\">Eliminar</button>\\r\\n  </modal-actions>\\r\\n</sm-modal>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/BasesComponent/BaseComponent/base.component.html\n// module id = ./src/app/BasesComponent/BaseComponent/base.component.html\n// module chunks = main","import { Component, OnInit, OnDestroy, ViewChild, ElementRef, NgZone } from \"@angular/core\";\r\nimport { Base } from \"../../_models/base\";\r\nimport { BaseService } from \"../../_services/bases.service\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\n\r\n@Component({\r\n  templateUrl: './base.component.html'\r\n})\r\n\r\nexport class BaseComponent implements OnInit {\r\n  base: Base;\r\n  base_id: string;\r\n\r\n  constructor(\r\n    private baseService: BaseService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.route.params.subscribe(\r\n      params => this.base_id = params['id']\r\n    )\r\n\r\n    this.baseService.base_details(this.base_id).subscribe(\r\n      base => this.base = base\r\n    )\r\n  }\r\n\r\n  baseDelete(modal) {\r\n    this.baseService.base_delete(this.base_id).subscribe(\r\n      base => {\r\n        modal.hide();\r\n        this.router.navigate(['/dashboard/bases']);\r\n      }\r\n    )\r\n  }\r\n\r\n  empty_base() {\r\n    this.baseService.base_empty(this.base_id).subscribe(\r\n      base => {\r\n        this.base.stack = [];\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/BasesComponent/BaseComponent/base.component.ts","module.exports = \"<div class=\\\"ui padded grid\\\">\\r\\n  <div class=\\\"ten wide column\\\">\\r\\n    <agm-map [latitude]=\\\"lat\\\" [longitude]=\\\"lng\\\" [scrollwheel]=\\\"false\\\" [zoom]=\\\"zoom\\\">\\r\\n        <agm-marker [latitude]=\\\"latitude\\\" [longitude]=\\\"longitude\\\"></agm-marker>\\r\\n    </agm-map>\\r\\n  </div>\\r\\n  <div class=\\\"six wide column\\\">\\r\\n    <h3>Crear nueva base</h3>\\r\\n    <form class=\\\"ui form\\\" [formGroup]=\\\"baseForm\\\">\\r\\n      <sm-loader [complete]=\\\"!loading\\\" class=\\\"inverted\\\" text=\\\"Guardando\\\"></sm-loader>\\r\\n\\r\\n      <div class=\\\"field\\\">\\r\\n        <sm-input label=\\\"Nombre\\\" [control]=\\\"name\\\" placeholder=\\\"Nombre base\\\"></sm-input>\\r\\n      </div>\\r\\n      <div class=\\\"field\\\">\\r\\n        <!-- <sm-input label=\\\"Dirección\\\" [control]=\\\"address\\\" placeholder=\\\"Dirección base\\\" #search></sm-input> -->\\r\\n        <label>Dirección</label>\\r\\n        <input type=\\\"text\\\" formControlName=\\\"address\\\" #search>\\r\\n      </div>\\r\\n\\r\\n      <sm-button (click)=\\\"base_save()\\\" [disabled]=\\\"baseForm.invalid\\\" class=\\\"primary\\\">Crear base</sm-button>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/BasesComponent/BaseCreateComponent/base.create.component.html\n// module id = ./src/app/BasesComponent/BaseCreateComponent/base.create.component.html\n// module chunks = main","import { Component, OnInit, ViewChild, ElementRef, NgZone } from \"@angular/core\";\r\nimport { FormGroup, FormControl, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { MapsAPILoader } from \"@agm/core\";\r\nimport { } from \"@types/googlemaps\";\r\nimport { BaseService } from \"../../_services/bases.service\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n  templateUrl: './base.create.component.html'\r\n})\r\n\r\nexport class BaseCreateComponent implements OnInit {\r\n\r\n  public baseForm: FormGroup\r\n  public name: FormControl\r\n  public address: FormControl\r\n\r\n  public loading: boolean = false\r\n\r\n  public lat: number = 51.678418\r\n  public lng: number = 7.809007\r\n  public zoom: number = 12\r\n\r\n  public latitude: number;\r\n  public longitude: number;\r\n\r\n  @ViewChild(\"search\") public searchElementRef: ElementRef;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private mapsAPILoader: MapsAPILoader,\r\n    private ngZone: NgZone,\r\n    private baseService: BaseService,\r\n    private route: Router\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    navigator.geolocation.getCurrentPosition(position => {\r\n      this.lat = position.coords.latitude;\r\n      this.lng = position.coords.longitude;\r\n    })\r\n\r\n\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/BasesComponent/BaseCreateComponent/base.create.component.ts","module.exports = \"<div class=\\\"ui padded grid\\\">\\r\\n  <div class=\\\"four wide column\\\" style=\\\"max-height: 90vh; overflow-y: scroll;\\\">\\r\\n    <sm-list class=\\\"divided animated\\\">\\r\\n      <sm-item *ngFor=\\\"let base of bases\\\" [header]=\\\"base.name\\\" routerLink=\\\"/dashboard/base/{{base._id}}\\\" [ngClass]=\\\"{'base-selected': base._id == base_selected}\\\">\\r\\n        {{base.address}}\\r\\n      </sm-item>\\r\\n    </sm-list>\\r\\n  </div>\\r\\n  <div class=\\\"twelve wide column\\\">\\r\\n    <agm-map [latitude]=\\\"latitude\\\" [longitude]=\\\"longitude\\\" [scrollwheel]=\\\"false\\\" [zoom]=\\\"zoom\\\">\\r\\n        <agm-marker (markerClick)=\\\"selectBase(marker)\\\" [iconUrl]=\\\"'assets/base.png'\\\" [openInfoWindow]=\\\"true\\\" *ngFor=\\\"let marker of markers\\\" [label]=\\\"marker.label\\\" [latitude]=\\\"marker.latitude\\\" [longitude]=\\\"marker.longitude\\\"></agm-marker>\\r\\n    </agm-map>\\r\\n\\r\\n    <form class=\\\"ui form\\\" [formGroup]=\\\"baseForm\\\" style=\\\"margin-top: 1em;\\\">\\r\\n      <sm-loader [complete]=\\\"!loading\\\" class=\\\"inverted\\\" text=\\\"Guardando\\\"></sm-loader>\\r\\n\\r\\n      <div class=\\\"field\\\">\\r\\n        <sm-input label=\\\"Nombre\\\" [control]=\\\"name\\\" placeholder=\\\"Nombre base\\\"></sm-input>\\r\\n      </div>\\r\\n      <div class=\\\"field\\\">\\r\\n        <!-- <sm-input label=\\\"Dirección\\\" [control]=\\\"address\\\" placeholder=\\\"Dirección base\\\" #search></sm-input> -->\\r\\n        <label>Dirección</label>\\r\\n        <input type=\\\"text\\\" formControlName=\\\"address\\\" #search>\\r\\n      </div>\\r\\n\\r\\n      <sm-button (click)=\\\"base_save()\\\" [disabled]=\\\"baseForm.invalid\\\" class=\\\"primary\\\">Crear base</sm-button>\\r\\n    </form>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<style>\\r\\n  .base-selected {\\r\\n    border: 1px solid #FFC107;\\r\\n    padding: 10px !important;\\r\\n  }\\r\\n\\r\\n  agm-map {\\r\\n    height: 70vh;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/BasesComponent/bases.component.html\n// module id = ./src/app/BasesComponent/bases.component.html\n// module chunks = main","import {\r\n  Component,\r\n  OnInit,\r\n  NgZone,\r\n  ViewChild,\r\n  ElementRef\r\n} from \"@angular/core\";\r\nimport { BaseService } from \"../_services/bases.service\";\r\nimport { Base } from \"../_models/base\";\r\nimport {\r\n  FormGroup,\r\n  FormControl,\r\n  FormBuilder,\r\n  Validators\r\n} from \"@angular/forms\";\r\nimport { MapsAPILoader } from \"@agm/core\";\r\nimport {} from \"@types/googlemaps\";\r\n\r\n@Component({\r\n  templateUrl: \"./bases.component.html\"\r\n})\r\nexport class BasesComponent implements OnInit {\r\n  public latitude: number;\r\n  public longitude: number;\r\n  public zoom: number;\r\n\r\n  public bases: Base[] = [];\r\n  markers: any[] = [];\r\n\r\n  base_selected: string;\r\n\r\n  public baseForm: FormGroup;\r\n  public name: FormControl;\r\n  public address: FormControl;\r\n\r\n  public loading: boolean = false;\r\n\r\n  @ViewChild(\"search\") public searchElementRef: ElementRef;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private mapsAPILoader: MapsAPILoader,\r\n    private ngZone: NgZone,\r\n    private baseService: BaseService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.zoom = 12;\r\n    this.latitude = 19.040034;\r\n    this.longitude = -98.263005;\r\n\r\n    this.baseService.base_list().subscribe(bases => {\r\n      this.bases = bases.sort(this.sortBases);\r\n      this.bases.map(b => {\r\n        const marker = {\r\n          longitude: Number(b.coords[0]),\r\n          latitude: Number(b.coords[1]),\r\n          label: b.name\r\n        };\r\n\r\n        this.markers.push(marker);\r\n      });\r\n    });\r\n\r\n    this.name = this.fb.control(\"\", Validators.required);\r\n    this.address = this.fb.control(\"\", Validators.required);\r\n\r\n    this.baseForm = this.fb.group({\r\n      name: this.name,\r\n      address: this.address,\r\n      lat: \"\",\r\n      lng: \"\"\r\n    });\r\n\r\n    this.mapsAPILoader.load().then(() => {\r\n      let autocomplete = new google.maps.places.Autocomplete(\r\n        this.searchElementRef.nativeElement,\r\n        {\r\n          types: [\"address\"]\r\n        }\r\n      );\r\n      autocomplete.addListener(\"place_changed\", () => {\r\n        this.ngZone.run(() => {\r\n          let place: google.maps.places.PlaceResult = autocomplete.getPlace();\r\n\r\n          if (place.geometry === undefined || place.geometry === null) {\r\n            return;\r\n          }\r\n          this.address.setValue(place.formatted_address);\r\n          //this.latitude = place.geometry.location.lat();\r\n          this.baseForm.value.lat = place.geometry.location.lat();\r\n\r\n          //this.longitude = place.geometry.location.lng();\r\n          this.baseForm.value.lng = place.geometry.location.lng();\r\n          this.zoom = 13;\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  base_save() {\r\n    this.baseService.base_create(this.baseForm.value).subscribe(base => {\r\n      this.bases.push(base);\r\n      this.bases = this.bases.sort(this.sortBases);\r\n\r\n      const marker = {\r\n        longitude: Number(base.coords[0]),\r\n        latitude: Number(base.coords[1]),\r\n        label: base.name,\r\n        _id: base._id\r\n      };\r\n\r\n      this.markers.push(marker);\r\n      this.baseForm.reset();\r\n    });\r\n  }\r\n\r\n  selectBase(base) {\r\n    this.base_selected = this.bases.find(b => b.name == base.label)._id\r\n    console.log(base);\r\n  }\r\n\r\n  sortBases(a, b) {\r\n    if (a.name < b.name) { return -1; }\r\n    if (a.name > b.name) { return 1; }\r\n\r\n    return 0;\r\n\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/BasesComponent/bases.component.ts","module.exports = \"/deep/ .logo-xcero {\\r\\n  width: 6em !important;\\r\\n}\\r\\n\\r\\n/* /deep/ .ui.inverted.menu .yellow.active.item, .ui.inverted.yellow.menu {\\r\\n  background-color: #FEEE02;\\r\\n}\\r\\n\\r\\n/deep/ .ui.menu .yellow.active.item, .ui.yellow.menu .active.item {\\r\\n  border-color: #FEEE02 !important;\\r\\n} */\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/DashboradComponent/dashboard.component.css\n// module id = ./src/app/DashboradComponent/dashboard.component.css\n// module chunks = main","module.exports = \"<sm-menu title=\\\"XCero\\\" logoClass=\\\"logo-xcero\\\" class=\\\"ui inverted\\\" logo=\\\"assets/xcero_oficial.png\\\">\\r\\n\\r\\n  <sm-menu class=\\\"menu right secondary\\\">\\r\\n      <a class=\\\"item yellow\\\" sm-item routerLink=\\\"services\\\" routerLinkActive=\\\"active\\\">Servicios</a>\\r\\n    <a class=\\\"item yellow\\\" sm-item routerLink=\\\"drivers\\\" routerLinkActive=\\\"active\\\">Conductores</a>\\r\\n    <a class=\\\"item yellow\\\" routerLink=\\\"tariff\\\" routerLinkActive=\\\"active\\\" sm-item>Tarifas</a>\\r\\n    <a class=\\\"item yellow\\\" sm-item routerLink=\\\"bases\\\" routerLinkActive=\\\"active\\\">Bases</a>\\r\\n    <a class=\\\"item yellow\\\" sm-item routerLink=\\\"notices\\\" routerLinkActive=\\\"active\\\">Avisos</a>\\r\\n    <a class=\\\"item yellow\\\" sm-item routerLink=\\\"reports\\\" routerLinkActive=\\\"active\\\">Reportes</a>\\r\\n    <a class=\\\"item\\\" (click)=\\\"logOut()\\\">\\r\\n      <i class=\\\"icon power off\\\"></i>\\r\\n    </a>\\r\\n  </sm-menu>\\r\\n</sm-menu>\\r\\n\\r\\n<router-outlet></router-outlet>\\r\\n\\r\\n<style>\\r\\n  .logo-xcero {\\r\\n    width: 6em !important;\\r\\n  }\\r\\n</style>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/DashboradComponent/dashboard.component.html\n// module id = ./src/app/DashboradComponent/dashboard.component.html\n// module chunks = main","import { Component } from \"@angular/core\";\r\nimport { AuthenticationService } from \"../_services/authentication.service\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\n\r\nexport class DashboardComponent {\r\n  constructor(\r\n    private authenticationService: AuthenticationService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  logOut() {\r\n    this.authenticationService.logOut()\r\n    this.router.navigate(['/login'])\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/DashboradComponent/dashboard.component.ts","module.exports = \"<div class=\\\"ui padded grid\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"sixteen wide column\\\">\\r\\n      <h3 *ngIf=\\\"reviews.length == 0\\\">Este conductor aún no tiene comentarios.</h3>\\r\\n      <!-- <div class=\\\"ui comments\\\">\\r\\n        <div class=\\\"comment\\\" *ngFor=\\\"let review of reviews\\\">\\r\\n          <div class=\\\"content\\\">\\r\\n            <a class=\\\"author\\\">{{review.author?.full_name}}</a>\\r\\n            <div class=\\\"metadata\\\">\\r\\n              <div class=\\\"date\\\">{{review.date | date:'dd/MM/yy'}}</div>\\r\\n              <div class=\\\"rating\\\">\\r\\n                <i class=\\\"star icon\\\"></i>\\r\\n                {{review.rating}}\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"text\\\">\\r\\n              {{review.comment}}\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div> -->\\r\\n\\r\\n      <div class=\\\"ui visible message\\\" *ngFor=\\\"let review of reviews\\\">\\r\\n          <div class=\\\"rating\\\">\\r\\n              <i class=\\\"star icon\\\"></i>\\r\\n              {{review.rating}}\\r\\n            </div> {{review.date | date:'dd/MM/yy'}}\\r\\n        <p>{{review.comment}}</p>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/DriversComponent/DriverComponent/CommentsComponent/comments.component.html\n// module id = ./src/app/DriversComponent/DriverComponent/CommentsComponent/comments.component.html\n// module chunks = main","import { Component, OnInit } from \"@angular/core\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { DriversService } from \"../../../_services/drivers.service\";\r\n\r\n@Component({\r\n  templateUrl: './comments.component.html'\r\n})\r\n\r\nexport class CommentsComponent implements OnInit {\r\n  private driver_id;\r\n  public reviews: any[] = [];\r\n  constructor(\r\n    private driverService: DriversService,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.route.parent.params.subscribe(\r\n      params => this.driver_id = params['id']\r\n    );\r\n\r\n    this.driverService.driver_reviews(this.driver_id).subscribe(\r\n      reviews => this.reviews = reviews\r\n    )\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/DriversComponent/DriverComponent/CommentsComponent/comments.component.ts","module.exports = \"<div class=\\\"ui padded grid\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"sixteen wide column\\\">\\r\\n        <form class=\\\"ui reply form\\\" style=\\\"margin-bottom: 20px;\\\">\\r\\n            <div class=\\\"field\\\">\\r\\n              <textarea cols=\\\"3\\\" rows=\\\"3\\\" placeholder=\\\"Ingresa un nuevo mensaje\\\" name=\\\"body\\\" [(ngModel)]=\\\"body\\\"></textarea>\\r\\n            </div>\\r\\n            <button class=\\\"ui primary submit labeled icon button\\\" (click)=\\\"send()\\\">\\r\\n              <i class=\\\"icon edit\\\"></i> Enviar mensaje\\r\\n            </button>\\r\\n          </form>\\r\\n\\r\\n          <div class=\\\"ui raised segment\\\" *ngFor=\\\"let inbox of inboxs\\\">\\r\\n            <b>{{inbox.date | date:'dd/MM/yy'}}</b>\\r\\n            <p>{{\\r\\n              inbox.body\\r\\n            }}\\r\\n            </p>\\r\\n          </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/DriversComponent/DriverComponent/MessagesComponent/messages.component.html\n// module id = ./src/app/DriversComponent/DriverComponent/MessagesComponent/messages.component.html\n// module chunks = main","import { Component, OnInit } from \"@angular/core\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { DriversService } from \"../../../_services/drivers.service\";\r\n\r\n@Component({\r\n  templateUrl: './messages.component.html'\r\n})\r\n\r\nexport class MessagesComponent implements OnInit {\r\n  body: string;\r\n  driver_id: string;\r\n\r\n  inboxs: any[] = []\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private driversService: DriversService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.route.parent.params.subscribe(\r\n      params => this.driver_id = params['id']\r\n    )\r\n\r\n    this.driversService.driver_inbox_list(this.driver_id).subscribe(\r\n      inboxs => this.inboxs = inboxs\r\n    )\r\n  }\r\n\r\n  send() {\r\n    if (this.body != null && this.body !== '') {\r\n      const inbox = {\r\n        date: (new Date).getTime(),\r\n        body: this.body\r\n      }\r\n      this.driversService.driver_inbox_create(this.driver_id, inbox).subscribe(\r\n        inbox_c => {\r\n          this.inboxs.unshift(inbox_c);\r\n          this.body = '';\r\n        }\r\n      )\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/DriversComponent/DriverComponent/MessagesComponent/messages.component.ts","module.exports = \"<div class=\\\"ui padded grid\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"sixteen wide column\\\">\\r\\n        <h3 *ngIf=\\\"reports.length == 0\\\">Este conductor aún no tiene comentarios.</h3>\\r\\n        <div class=\\\"ui comments\\\">\\r\\n            <div class=\\\"comment\\\" *ngFor=\\\"let report of reports\\\">\\r\\n              <div class=\\\"content\\\">\\r\\n                <a class=\\\"author\\\">{{report.user?.full_name}}</a>\\r\\n                <div class=\\\"metadata\\\">\\r\\n                  <div class=\\\"date\\\">{{report.date | date:'dd/MM/yy'}}</div>\\r\\n                </div>\\r\\n                <div class=\\\"text\\\">\\r\\n                  <b>{{report.reason}}</b> <br> {{report.text}}\\r\\n                  <p *ngIf=\\\"report.phone\\\">Télefono: {{report.phone}}</p>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/DriversComponent/DriverComponent/ReportsComponent/reports.component.html\n// module id = ./src/app/DriversComponent/DriverComponent/ReportsComponent/reports.component.html\n// module chunks = main","import { Component, OnInit } from \"@angular/core\";\r\nimport { DriversService } from \"../../../_services/drivers.service\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\n\r\n@Component({\r\n  templateUrl: './reports.component.html'\r\n})\r\n\r\nexport class ReportsComponent implements OnInit {\r\n  private driver_id;\r\n  public reports: any[] = [];\r\n  constructor(\r\n    private driversService: DriversService,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.route.parent.params.subscribe(\r\n      params => this.driver_id = params['id']\r\n    );\r\n\r\n    this.driversService.driver_reports(this.driver_id).subscribe(\r\n      reports => this.reports = reports\r\n    )\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/DriversComponent/DriverComponent/ReportsComponent/reports.component.ts","module.exports = \"<div class=\\\"ui padded grid\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"sixteen wide column\\\">\\r\\n\\r\\n      <h4 *ngIf=\\\"services.length > 0\\\" style=\\\"display: inline-block;\\\">Servicios: {{getTotal()}}</h4>\\r\\n\\r\\n        <div class=\\\"ui form\\\" style=\\\"display: inline-block; float: right; margin-bottom: 20px;\\\">\\r\\n            <div class=\\\"field\\\">\\r\\n              <select [(ngModel)]=\\\"time\\\" (change)=\\\"getServices()\\\">\\r\\n                <option value=\\\"day\\\">Diario</option>\\r\\n                <option value=\\\"week\\\">Semanal</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n        <h3 *ngIf=\\\"services.length == 0\\\">Aún no tiene servicios en el tiempo seleccionado.</h3>\\r\\n        <table class=\\\"ui celled table\\\" *ngIf=\\\"services.length > 0\\\">\\r\\n            <thead>\\r\\n              <tr>\\r\\n                <th>Cliente</th>\\r\\n                <th>Origen</th>\\r\\n                <th>Destino</th>\\r\\n                <th>Estado</th>\\r\\n                <th>Fecha</th>\\r\\n                <th>Costo</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let service of services\\\" [ngClass]=\\\"{'negative': service.state == 'canceled', 'positive': service.state == 'completed'}\\\">\\r\\n                <td>{{service.user?.full_name}}</td>\\r\\n                <td>{{\\r\\n                  service.details\\r\\n                  }}</td>\\r\\n                <td>\\r\\n                  {{\\r\\n                    service.destiny_details\\r\\n                  }}\\r\\n                </td>\\r\\n                <td>{{service.state == 'completed' ? 'Completado' :\\r\\n                  service.state == 'pending' ? 'Pendiente' :\\r\\n                  service.state == 'on_the_way' ? 'En camino' :\\r\\n                  service.state == 'in_progress' ? 'En proceso' : 'Cancelado'\\r\\n                }}</td>\\r\\n                <td>{{service.state == 'completed' ? (service.end_time | date: 'dd/MM/yy HH:mm') : ''}}</td>\\r\\n                <td>{{getCost(service) | currency:'MXN':'symbol-narrow'}}</td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/DriversComponent/DriverComponent/ServicesComponent/services.component.html\n// module id = ./src/app/DriversComponent/DriverComponent/ServicesComponent/services.component.html\n// module chunks = main","import { Component, OnInit } from \"@angular/core\";\r\nimport { DriversService } from \"../../../_services/drivers.service\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\n\r\n@Component({\r\n  templateUrl: './services.component.html'\r\n})\r\n\r\nexport class ServicesComponent implements OnInit {\r\n  driver_id: string;\r\n  services: any[] = [];\r\n\r\n  time: string = 'day';\r\n  constructor(\r\n    private driversService: DriversService,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.route.parent.params.subscribe(\r\n      params => this.driver_id = params['id']\r\n    )\r\n\r\n    this.driversService.driver_services(this.driver_id, 'day').subscribe(\r\n      services => this.services = services\r\n    )\r\n  }\r\n\r\n  getServices() {\r\n    this.driversService.driver_services(this.driver_id, this.time).subscribe(\r\n      services => this.services = services\r\n    )\r\n  }\r\n\r\n  getTotal() {\r\n    let total = 0;\r\n    this.services.map(s => {\r\n      if (s.state == 'completed') {\r\n        total++;\r\n      }\r\n    });\r\n    return total;\r\n  }\r\n\r\n  getCost(service) {\r\n    let total = 0;\r\n    service.fees.map(f => total += f.price);\r\n    total += service.tariff ? service.tariff.cost : 0;\r\n    return total;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/DriversComponent/DriverComponent/ServicesComponent/services.component.ts","module.exports = \"<div class=\\\"ui padded grid\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"sixteen wide column\\\" style=\\\"margin-bottom: 20px;\\\">\\r\\n      <div class=\\\"ui large breadcrumb\\\">\\r\\n        <a class=\\\"section\\\" routerLink=\\\"/dashboard/drivers\\\">Conductores</a>\\r\\n        <i class=\\\"right chevron icon divider\\\"></i>\\r\\n        <div class=\\\"active section\\\">{{driver?.full_name}}</div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"three wide column\\\">\\r\\n      <div class=\\\"ui card\\\">\\r\\n        <div class=\\\"image\\\">\\r\\n          <img src=\\\"{{driver?.image}}\\\">\\r\\n        </div>\\r\\n        <div class=\\\"content\\\">\\r\\n          <div class=\\\"header\\\">{{driver?.full_name}}\\r\\n            <div class=\\\"ui icon button\\\" style=\\\"float: right;\\\" (click)=\\\"modaldriver.show({blurring: true})\\\">\\r\\n              <i class=\\\"icon edit\\\"></i>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"meta\\\">\\r\\n            Unidad: {{driver?.unit_number}} <br>\\r\\n            Usuario: {{driver?.account}} <br>\\r\\n            {{driver?.email}} <br>\\r\\n            {{driver?.brand_car}}  {{driver?.model_car}} <br>\\r\\n            {{driver?.license_plate}}\\r\\n          </div>\\r\\n          <div class=\\\"description\\\">\\r\\n            <bar-rating *ngIf=\\\"driver\\\" [(rate)]=\\\"driver.rating\\\" [max]=\\\"5\\\" [readOnly]=\\\"true\\\"></bar-rating>\\r\\n          </div>\\r\\n\\r\\n          <sm-checkbox *ngIf=\\\"enable\\\" label=\\\"Usuario activo\\\" [control]=\\\"enable\\\" (change)=\\\"changeEnable()\\\" type=\\\"toggle\\\"></sm-checkbox>\\r\\n\\r\\n          <!-- <div class=\\\"field\\\">\\r\\n            <div class=\\\"ui toggle checkbox\\\">\\r\\n              <input type=\\\"checkbox\\\" tabindex=\\\"0\\\" name=\\\"enable\\\" class=\\\"hidden\\\" [checked]=\\\"driver?.enable\\\" (change)=\\\"changeEnable()\\\">\\r\\n              <label>Usuario activo</label>\\r\\n            </div>\\r\\n          </div> -->\\r\\n\\r\\n          <button class=\\\"ui fluid button yellow\\\" *ngIf=\\\"driver && driver.emergency\\\" (click)=\\\"disable_emergency()\\\" style=\\\"margin-top: 50px;\\\">Desactivar\\r\\n            emergencia</button>\\r\\n          <button class=\\\"ui negative fluid button\\\" style=\\\"margin-top: 50px;\\\" (click)=\\\"modal.show()\\\">Eliminar</button>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"thirteen wide column\\\">\\r\\n      <div class=\\\"ui tabular menu\\\">\\r\\n        <a routerLink=\\\"services\\\" routerLinkActive=\\\"active\\\" class=\\\" item\\\">\\r\\n          Servicios\\r\\n        </a>\\r\\n        <a routerLink=\\\"inbox\\\" routerLinkActive=\\\"active\\\" class=\\\"item\\\">\\r\\n          Mensajes\\r\\n        </a>\\r\\n        <a routerLink=\\\"comments\\\" class=\\\"item\\\" routerLinkActive=\\\"active\\\">\\r\\n          Comentarios\\r\\n        </a>\\r\\n        <a routerLink=\\\"reports\\\" class=\\\"item\\\" routerLinkActive=\\\"active\\\">\\r\\n          Reportes\\r\\n        </a>\\r\\n      </div>\\r\\n\\r\\n      <router-outlet></router-outlet>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<sm-modal class=\\\"basic\\\" #modal>\\r\\n  <modal-content>\\r\\n    <h2>¿Estás seguro de querer borrar la unidad permanentemente?</h2>\\r\\n  </modal-content>\\r\\n  <modal-actions>\\r\\n    <button class=\\\"ui button\\\" style=\\\"margin-right: 10px;\\\" (click)=\\\"modal.hide()\\\">Cancelar</button>\\r\\n    <button class=\\\"ui button red\\\" (click)=\\\"deleteDriver(modal)\\\">Eliminar</button>\\r\\n  </modal-actions>\\r\\n</sm-modal>\\r\\n\\r\\n<sm-modal title=\\\"Editar unidad\\\" class=\\\"\\\" #modaldriver>\\r\\n  <modal-content>\\r\\n    <div class=\\\"ui container grid\\\" style=\\\"padding-top: 2em;\\\">\\r\\n      <div class=\\\"ten wide column\\\">\\r\\n        <form class=\\\"ui form\\\" *ngIf=\\\"driver\\\">\\r\\n          <div class=\\\"field\\\">\\r\\n            <label>Nombre completo</label>\\r\\n            <input type=\\\"text\\\" name=\\\"first-name\\\" placeholder=\\\"Nombre completo\\\" [(ngModel)]=\\\"driver_updated.full_name\\\">\\r\\n          </div>\\r\\n          <div class=\\\"field\\\">\\r\\n            <label>Email</label>\\r\\n            <input type=\\\"email\\\" name=\\\"email\\\" placeholder=\\\"Email\\\" [(ngModel)]=\\\"driver_updated.email\\\">\\r\\n          </div>\\r\\n          <div class=\\\"field\\\">\\r\\n            <label>Número de unidad</label>\\r\\n            <input type=\\\"number\\\" name=\\\"unit_number\\\" placeholder=\\\"Número de unidad\\\" [(ngModel)]=\\\"driver_updated.unit_number\\\">\\r\\n          </div>\\r\\n          <div class=\\\"field\\\">\\r\\n            <label>Marca</label>\\r\\n            <input type=\\\"text\\\" name=\\\"brand\\\" placeholder=\\\"Marca\\\" [(ngModel)]=\\\"driver_updated.brand_card\\\">\\r\\n          </div>\\r\\n          <div class=\\\"field\\\">\\r\\n            <label>Modelo</label>\\r\\n            <input type=\\\"text\\\" name=\\\"model\\\" placeholder=\\\"Modelo\\\" [(ngModel)]=\\\"driver_updated.model_car\\\">\\r\\n          </div>\\r\\n          <div class=\\\"field\\\">\\r\\n            <label>Placa</label>\\r\\n            <input type=\\\"text\\\" name=\\\"license\\\" placeholder=\\\"Placa\\\" [(ngModel)]=\\\"driver_updated.license_plate\\\">\\r\\n          </div>\\r\\n          <div class=\\\"field\\\">\\r\\n            <label>Nombre de usuario</label>\\r\\n            <input type=\\\"text\\\" name=\\\"full_name\\\" placeholder=\\\"Usuario\\\" [(ngModel)]=\\\"driver_updated.account\\\">\\r\\n          </div>\\r\\n          <div class=\\\"field\\\">\\r\\n            <label>Contraseña</label>\\r\\n            <input type=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Contraseña\\\" [(ngModel)]=\\\"driver_updated.password\\\">\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n      <div class=\\\"four wide column\\\" *ngIf=\\\"driver_updated\\\">\\r\\n        <div class=\\\"field\\\">\\r\\n          <img style=\\\"max-width: 100%; margin-top:10px; display: block; margin-left: auto; margin-right: auto;\\\" class=\\\"ui small circular image\\\"\\r\\n            [src]=\\\"driver_updated.image\\\" alt=\\\"\\\">\\r\\n          <label id=\\\"uploader\\\">\\r\\n            Selecciona imagen\\r\\n            <input type=\\\"file\\\" name=\\\"myfile\\\" [(ngModel)]=\\\"val\\\" #image (change)=\\\"readURL(image, val)\\\" accept=\\\"image/*\\\" />\\r\\n          </label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </modal-content>\\r\\n  <modal-actions>\\r\\n    <div class=\\\"ui buttons\\\">\\r\\n      <button class=\\\"ui button red\\\" style=\\\"margin-right: 10px;\\\" (click)=\\\"modaldriver.hide()\\\">Cancelar</button>\\r\\n      <div class=\\\"ui button primary\\\" (click)=\\\"updateDriver(modaldriver)\\\" [ngClass]=\\\"{'loading disabled': updating}\\\">Guardar</div>\\r\\n    </div>\\r\\n  </modal-actions>\\r\\n</sm-modal>\\r\\n\\r\\n<style>\\r\\n\\r\\n</style>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/DriversComponent/DriverComponent/driver.component.html\n// module id = ./src/app/DriversComponent/DriverComponent/driver.component.html\n// module chunks = main","import { Component, OnInit } from \"@angular/core\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { DriversService } from \"../../_services/drivers.service\";\r\nimport { FormControl } from \"@angular/forms\";\r\n\r\n@Component({\r\n  templateUrl: './driver.component.html'\r\n})\r\n\r\nexport class DriverComponent implements OnInit {\r\n  driver: any;\r\n  driver_id: string;\r\n  enable: FormControl;\r\n  new_image: string;\r\n  updating: boolean = false;\r\n  driver_updated: any;\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private driverService: DriversService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.route.params.subscribe(\r\n      params => this.driver_id = params['id']\r\n    )\r\n\r\n    this.driverService.driver_details(this.driver_id).subscribe(\r\n      driver => {\r\n        this.driver = driver;\r\n        this.enable = new FormControl(this.driver.enable)\r\n        this.driver_updated = Object.assign({}, this.driver)\r\n      }\r\n    )\r\n  }\r\n\r\n  changeEnable() {\r\n    this.driverService.driver_update(this.driver_id, {enable: !this.driver.enable}).subscribe(\r\n      driver => {\r\n        this.driver.enable = driver.enable;\r\n        this.enable.setValue(driver.enable);\r\n      }\r\n    )\r\n  }\r\n\r\n  deleteDriver(modal) {\r\n    this.driverService.driver_delete(this.driver._id).subscribe(\r\n      driver => {\r\n        this.router.navigate(['/dashboard/drivers'])\r\n        modal.hide();\r\n      }\r\n    )\r\n  }\r\n\r\n  readURL(input) {\r\n    if (input.files && input.files[0]) {\r\n      const reader = new FileReader();\r\n\r\n      reader.onload = (e: any) => {\r\n        this.driver_updated.image = e.target.result;\r\n      };\r\n\r\n      reader.readAsDataURL(input.files[0]);\r\n    }\r\n  }\r\n\r\n  updateDriver(modal) {\r\n    this.updating = true;\r\n    this.driverService.driver_update(this.driver_id, this.driver_updated).subscribe(\r\n      driver => {\r\n        this.driver = driver;\r\n        this.updating = false;\r\n        modal.hide();\r\n      },\r\n      error => {\r\n        this.driver_updated = Object.assign({}, this.driver);\r\n        this.updating = false;\r\n      }\r\n    )\r\n  }\r\n\r\n  disable_emergency() {\r\n    this.driverService.disable_emergency(this.driver_id).subscribe(\r\n      response => this.driver.emergency = response.emergency\r\n    )\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/DriversComponent/DriverComponent/driver.component.ts","module.exports = \"<div class=\\\"ui container grid\\\" style=\\\"padding-top: 2em;\\\">\\r\\n  <div class=\\\"ten wide column\\\">\\r\\n    <form class=\\\"ui form\\\" [formGroup]=\\\"driverForm\\\">\\r\\n      <div class=\\\"field\\\">\\r\\n        <label>Nombre completo</label>\\r\\n        <input type=\\\"text\\\" name=\\\"first-name\\\" placeholder=\\\"Nombre completo\\\" formControlName=\\\"full_name\\\">\\r\\n      </div>\\r\\n      <div class=\\\"field\\\">\\r\\n        <label>Email</label>\\r\\n        <input type=\\\"email\\\" name=\\\"email\\\" placeholder=\\\"Email\\\" formControlName=\\\"email\\\">\\r\\n      </div>\\r\\n      <div class=\\\"field\\\">\\r\\n        <label>Número de unidad</label>\\r\\n        <input type=\\\"number\\\" name=\\\"unit_number\\\" placeholder=\\\"Número de unidad\\\" formControlName=\\\"unit_number\\\">\\r\\n      </div>\\r\\n      <div class=\\\"field\\\">\\r\\n          <label>Marca</label>\\r\\n          <input type=\\\"text\\\" name=\\\"unit_number\\\" placeholder=\\\"Marca\\\" formControlName=\\\"brand_car\\\">\\r\\n        </div>\\r\\n        <div class=\\\"field\\\">\\r\\n          <label>Modelo</label>\\r\\n          <input type=\\\"text\\\" name=\\\"unit_number\\\" placeholder=\\\"Modelo\\\" formControlName=\\\"model_car\\\">\\r\\n        </div>\\r\\n        <div class=\\\"field\\\">\\r\\n          <label>Placa</label>\\r\\n          <input type=\\\"text\\\" name=\\\"unit_number\\\" placeholder=\\\"Placa\\\" formControlName=\\\"license_plate\\\">\\r\\n        </div>\\r\\n      <div class=\\\"field\\\">\\r\\n        <label>Nombre de usuario</label>\\r\\n        <input type=\\\"text\\\" name=\\\"full_name\\\" placeholder=\\\"Usuario\\\" formControlName=\\\"account\\\">\\r\\n      </div>\\r\\n      <div class=\\\"field\\\">\\r\\n        <label>Contraseña</label>\\r\\n        <input type=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Contraseña\\\" formControlName=\\\"password\\\">\\r\\n      </div>\\r\\n      <button class=\\\"ui yellow button\\\" [disabled]=\\\"driverForm.invalid\\\" (click)=\\\"create_driver()\\\">Crear conductor</button>\\r\\n    </form>\\r\\n  </div>\\r\\n  <div class=\\\"four wide column\\\">\\r\\n      <div class=\\\"field\\\">\\r\\n        <img style=\\\"max-width: 100%; margin-top:10px; display: block; margin-left: auto; margin-right: auto;\\\" class=\\\"ui small circular image\\\" [src]=\\\"imageURL\\\" alt=\\\"\\\">\\r\\n        <label id=\\\"uploader\\\">\\r\\n          Selecciona imagen\\r\\n          <input type=\\\"file\\\" name=\\\"myfile\\\" [(ngModel)]=\\\"val\\\" #image (change)=\\\"readURL(image, val)\\\" accept=\\\"image/*\\\" />\\r\\n        </label>\\r\\n      </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/DriversComponent/DriverFormComponent/driver.form.component.html\n// module id = ./src/app/DriversComponent/DriverFormComponent/driver.form.component.html\n// module chunks = main","import { Component, OnInit } from \"@angular/core\";\r\nimport { AuthenticationService } from \"../../_services/authentication.service\";\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  FormControl,\r\n  Validators\r\n} from \"@angular/forms\";\r\nimport { SnotifyService } from \"ng-snotify\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n  templateUrl: \"./driver.form.component.html\"\r\n})\r\nexport class DriverFormComponent implements OnInit {\r\n  driverForm: FormGroup;\r\n  account: FormControl;\r\n  password: FormControl;\r\n  email: FormControl;\r\n  full_name: FormControl;\r\n  unit_number: FormControl;\r\n  role: FormControl;\r\n  license_plate: FormControl;\r\n  brand_car: FormControl;\r\n  model_car: FormControl;\r\n\r\n  public imageURL: string = \"http://via.placeholder.com/250x300\";\r\n\r\n  constructor(\r\n    private authenticationService: AuthenticationService,\r\n    private fb: FormBuilder,\r\n    private snotifyService: SnotifyService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.account = this.fb.control(\"\", Validators.required);\r\n    this.password = this.fb.control(\"\", Validators.required);\r\n    this.email = this.fb.control(\"\");\r\n    this.full_name = this.fb.control(\"\", Validators.required);\r\n    this.unit_number = this.fb.control('', Validators.required);\r\n    this.license_plate = this.fb.control('', Validators.required);\r\n    this.brand_car = this.fb.control('', Validators.required);\r\n    this.model_car = this.fb.control('', Validators.required);\r\n    this.role = this.fb.control('Driver', Validators.required);\r\n    //this.image = this.fb.control(this.imageURL, Validators.required);\r\n\r\n    this.driverForm = this.fb.group({\r\n      account: this.account,\r\n      password: this.password,\r\n      email: this.email,\r\n      full_name: this.full_name,\r\n      role: this.role,\r\n      image: this.imageURL,\r\n      unit_number: this.unit_number,\r\n      license_plate: this.license_plate,\r\n      brand_car: this.brand_car,\r\n      model_car: this.model_car\r\n    });\r\n  }\r\n\r\n  create_driver() {\r\n    this.authenticationService.user_create(this.driverForm.value).subscribe(\r\n      driver => {\r\n        this.snotifyService.success(`Unidad ${driver.user.unit_number} creado correctamente`);\r\n        this.router.navigate(['/dashboard/drivers'])\r\n      }\r\n    )\r\n  }\r\n\r\n  readURL(input) {\r\n    if (input.files && input.files[0]) {\r\n      const reader = new FileReader();\r\n\r\n      reader.onload = (e: any) => {\r\n        this.imageURL = e.target.result;\r\n        this.driverForm.value.image = e.target.result;\r\n      };\r\n\r\n      reader.readAsDataURL(input.files[0]);\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/DriversComponent/DriverFormComponent/driver.form.component.ts","module.exports = \"<div class=\\\"ui internally celled padded grid\\\" style=\\\"height: 92vh;;\\\">\\r\\n  <div class=\\\"four wide column\\\" style=\\\"max-height: 100%; overflow-y: scroll;\\\">\\r\\n    <sm-button class=\\\"yellow fluid\\\" icon=\\\"plus\\\" routerLink=\\\"/dashboard/drivers/create\\\">Añadir nuevo conductor</sm-button>\\r\\n\\r\\n    <div class=\\\"ui middle aligned divided list\\\">\\r\\n      <div class=\\\"item\\\" *ngFor=\\\"let driver of drivers\\\" title=\\\"{{driver.full_name}}\\\" [ngClass]=\\\"{'in-service': driver.inService, 'selected-driver': driver_selected == driver._id}\\\">\\r\\n        <div class=\\\"right floated content\\\">\\r\\n          <sm-button class=\\\"\\\" icon=\\\"zoom in\\\" (click)=\\\"zoomDriver(driver)\\\"></sm-button>\\r\\n        </div>\\r\\n        <img class=\\\"ui avatar image\\\" [src]=\\\"driver.image\\\">\\r\\n        <div class=\\\"content\\\" style=\\\"text-overflow: ellipsis;\\r\\n        max-width: 70%;\\r\\n        overflow: hidden;\\r\\n        white-space: nowrap;\\\">\\r\\n          <a routerLink=\\\"/dashboard/driver/{{driver._id}}\\\">\\r\\n            {{\\r\\n\\r\\n              (driver.unit_number + ', ' + driver.full_name)\\r\\n            }}\\r\\n        </a>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- <table class=\\\"ui very basic collapsing celled table\\\" style=\\\"margin-top: 2em;\\\">\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let driver of drivers\\\">\\r\\n          <td [ngClass]=\\\"{'selected-driver': driver_selected == driver._id}\\\">\\r\\n            <h4 class=\\\"ui image header\\\">\\r\\n\\r\\n              <div class=\\\"content\\\">\\r\\n                {{driver.full_name}} <span class=\\\"ui mini orange label\\\" *ngIf=\\\"driver.inService\\\">En servicio</span>\\r\\n                <div class=\\\"sub header\\\">Unidad: {{driver.unit_number}}</div>\\r\\n              </div>\\r\\n            </h4>\\r\\n          </td>\\r\\n          <td>\\r\\n              <sm-button class=\\\"\\\" icon=\\\"user\\\" routerLink=\\\"/dashboard/driver/{{driver._id}}\\\"></sm-button>\\r\\n              <sm-button class=\\\"\\\" icon=\\\"zoom in\\\" (click)=\\\"zoomDriver(driver)\\\"></sm-button>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table> -->\\r\\n  </div>\\r\\n  <div class=\\\"twelve wide column\\\">\\r\\n\\r\\n    <div style=\\\"background-color: #FFB74D; border-radius: 50%; height: 10px; width: 10px; display: inline-block;\\\"></div>\\r\\n       Seleccionado\\r\\n    <div style=\\\"margin-left: 10px; background-color: #FFF8E1; border-radius: 50%; height: 10px; width: 10px; display: inline-block;\\\"></div>\\r\\n       En servicio\\r\\n    <div style=\\\"margin-left: 10px; background-color: red; border-radius: 50%; height: 10px; width: 10px; display: inline-block;\\\"></div>\\r\\n      Emergencia\\r\\n    <agm-map [latitude]=\\\"latitude\\\" [longitude]=\\\"longitude\\\" [scrollwheel]=\\\"false\\\" [zoom]=\\\"zoom\\\">\\r\\n      <agm-marker *ngFor=\\\"let marker of driver_markers\\\" (markerClick)=\\\"selectDriver(marker)\\\" [iconUrl]=\\\"marker.icon\\\"\\r\\n        [label]=\\\"marker.label\\\" [latitude]=\\\"marker.latitude\\\" [longitude]=\\\"marker.longitude\\\"></agm-marker>\\r\\n    </agm-map>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<style>\\r\\n  agm-map {\\r\\n    height: 90vh;\\r\\n  }\\r\\n\\r\\n  .selected-driver {\\r\\n    background-color: #FFB74D !important;\\r\\n  }\\r\\n\\r\\n  .in-service {\\r\\n    background-color: #FFF8E1;\\r\\n  }\\r\\n</style>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/DriversComponent/drivers.component.html\n// module id = ./src/app/DriversComponent/drivers.component.html\n// module chunks = main","import { Component, OnInit, OnDestroy } from \"@angular/core\";\r\nimport { DriversService } from \"../_services/drivers.service\";\r\nimport 'rxjs/add/observable/interval';\r\nimport { Observable } from \"rxjs\";\r\n\r\n@Component({\r\n  templateUrl: './drivers.component.html'\r\n})\r\n\r\nexport class DriversComponent implements OnInit, OnDestroy {\r\n  public latitude: number;\r\n  public longitude: number;\r\n  public zoom: number;\r\n  sub: any;\r\n\r\n  drivers: any[] = [];\r\n  driver_markers: any[] = [];\r\n\r\n  driver_selected: string;\r\n\r\n  constructor(\r\n    private driversService: DriversService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.zoom = 12;\r\n    this.latitude = 19.040034;\r\n    this.longitude = -98.263005;\r\n\r\n    this.driversService.drivers_list().subscribe(\r\n      drivers => {\r\n        this.drivers = drivers.sort(this.sort);\r\n      }\r\n    )\r\n\r\n    this.mapDrivers();\r\n\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.sub.unsubscribe();\r\n  }\r\n\r\n  mapDrivers() {\r\n    this.driversService.drivers_location().subscribe(\r\n      drivers => {\r\n        this.driver_markers = drivers.filter(d => d.coords).map(d => {\r\n          if (d.coords) {\r\n            return {\r\n              longitude: Number(d.coords[0]),\r\n              latitude: Number(d.coords[1]),\r\n              label: d.unit_number.toString(),\r\n              icon: d.emergency ? 'assets/car-emergency.png' : 'assets/car.png'\r\n            };\r\n          }\r\n        });\r\n      }\r\n    )\r\n    this.sub = Observable.interval(10000)\r\n    .subscribe((val) => {\r\n      this.driversService.drivers_location().subscribe(\r\n        drivers => {\r\n          this.driver_markers = drivers.filter(d => d.coords).map(d => {\r\n            if (d.coords) {\r\n              return {\r\n                longitude: Number(d.coords[0]),\r\n                latitude: Number(d.coords[1]),\r\n                label: d.unit_number.toString(),\r\n                icon: d.emergency ? 'assets/car-emergency.png' : 'assets/car.png'\r\n              };\r\n            }\r\n          });\r\n          console.log(this.driver_markers);\r\n        }\r\n      )\r\n     })\r\n  }\r\n\r\n  selectDriver(driver) {\r\n    this.driver_selected = this.drivers.find(d => driver.label == d.unit_number)._id;\r\n  }\r\n\r\n  zoomDriver(driver) {\r\n    const driver_s = this.driver_markers.find(d => d.label == driver.unit_number.toString());\r\n    this.longitude = driver_s.longitude;\r\n    this.latitude = driver_s.latitude;\r\n\r\n    this.zoom = 18;\r\n  }\r\n\r\n  sort(a, b) {\r\n    if (a.unit_number < b.unit_number) { return -1; }\r\n    if (a.unit_number > b.unit_number) { return 1; }\r\n\r\n    return 0;\r\n\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/DriversComponent/drivers.component.ts","module.exports = \"<div class=\\\"ui padded grid\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"sixteen wide column\\\" style=\\\"margin-bottom: 10px;\\\">\\r\\n\\r\\n      <div class=\\\"ui input\\\">\\r\\n        <input placeholder=\\\"Fecha inicio\\\" [(ngModel)]=\\\"dateTime\\\" [owlDateTimeTrigger]=\\\"dt\\\" [owlDateTime]=\\\"dt\\\">\\r\\n        <owl-date-time #dt></owl-date-time>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"ui input\\\" style=\\\"margin-left: 10px;\\\">\\r\\n        <input placeholder=\\\"Fecha fin\\\" [(ngModel)]=\\\"dateTime2\\\" [owlDateTimeTrigger]=\\\"dt2\\\" [owlDateTime]=\\\"dt2\\\">\\r\\n        <owl-date-time #dt2></owl-date-time>\\r\\n      </div>\\r\\n      <div class=\\\"field\\\" style=\\\"display: inline-block;\\r\\n      margin-left: 10px;\\\">\\r\\n        <select class=\\\"ui dropdown\\\" [(ngModel)]=\\\"state\\\">\\r\\n          <option value=\\\"completed\\\">Completados</option>\\r\\n          <option value=\\\"canceled\\\">Cancelados</option>\\r\\n          <option value=\\\"negated\\\">Negados</option>\\r\\n        </select>\\r\\n      </div>\\r\\n\\r\\n      <button class=\\\"ui button\\\" (click)=\\\"search()\\\" [ngClass]=\\\"{'loading disabled': loading}\\\" [disabled]=\\\"dateTime == undefined || dateTime2 == undefined\\\"\\r\\n        style=\\\"margin-left: 10px;\\\">Buscar</button>\\r\\n      <button class=\\\"ui button\\\" (click)=\\\"clean()\\\">Borrar</button>\\r\\n      <span style=\\\"float: right;\\\">Total servicios: {{total()}}</span>\\r\\n      <span style=\\\"float: right; margin-right: 1em;\\\">Peticiones realizadas: {{total_request()}}</span>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"four wide column\\\">\\r\\n      <button class=\\\"ui yellow button\\\" (click)=\\\"can_copy = !can_copy\\\">{{can_copy ? 'Editar' : 'Copiar'}}</button>\\r\\n      <table class=\\\"ui very compact table\\\" style=\\\"max-width: 100%;\\r\\n      table-layout: fixed;\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th>#Unidad</th>\\r\\n            <th>#Servicios</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let unit of units; let i = index;\\\" [ngClass]=\\\"{'selected': unit_selected && unit_selected.unit_number == unit.unit_number}\\\">\\r\\n            <td>\\r\\n              <div class=\\\"ui input\\\" style=\\\"width: 70%;\\\" *ngIf=\\\"!can_copy\\\">\\r\\n                <input type=\\\"number\\\" [(ngModel)]=\\\"unit.unit_number\\\" (keyup.enter)=\\\"add_unit(unit.unit_number, i)\\\"\\r\\n                  (keyup.backspace)=\\\"delete(unit.unit_number, i)\\\">\\r\\n              </div>\\r\\n              <span *ngIf=\\\"can_copy\\\">\\r\\n                  {{unit.unit_number}}\\r\\n              </span>\\r\\n            </td>\\r\\n            <td (click)=\\\"unit_selected = unit\\\">{{unit.services.length > 0 ? unit.services.length : ''}}</td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"twelve wide column\\\">\\r\\n      <table class=\\\"ui very compact table\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th>Cliente</th>\\r\\n            <th>Origen</th>\\r\\n            <th *ngIf=\\\"!show_reason\\\">Destino</th>\\r\\n            <th *ngIf=\\\"show_reason\\\">Razón de negación</th>\\r\\n            <th>Hora inicializado</th>\\r\\n            <th>Hora finalizado</th>\\r\\n            <th>Costo</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody *ngIf=\\\"unit_selected\\\">\\r\\n          <tr *ngFor=\\\"let service of unit_selected.services\\\">\\r\\n            <td>{{service.user.full_name}}</td>\\r\\n            <td>{{service.details}}</td>\\r\\n            <td *ngIf=\\\"!show_reason\\\">{{service.destiny_details}}</td>\\r\\n            <td *ngIf=\\\"show_reason\\\">{{service.reason_negated}}</td>\\r\\n            <td>{{service.start_time | date:'dd/MM/yy HH:mm'}}</td>\\r\\n            <td>{{service.end_time | date:'dd/MM/yy HH:mm'}}</td>\\r\\n            <td>{{calculateTotal(service) | currency:'MXN':'symbol-narrow'}}</td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<style>\\r\\n  .selected {\\r\\n    background-color: lightgoldenrodyellow;\\r\\n  }\\r\\n</style>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/GlobalServicesComponent/global.services.component.html\n// module id = ./src/app/GlobalServicesComponent/global.services.component.html\n// module chunks = main","import { Component, OnInit } from \"@angular/core\";\r\nimport { DriversService } from \"../_services/drivers.service\";\r\n\r\n@Component({\r\n  templateUrl: './global.services.component.html'\r\n})\r\n\r\nexport class GlobalServicesComponent implements OnInit {\r\n  public dateTime: Date = new Date;\r\n  public dateTime2: Date = new Date;\r\n\r\n  public units: any[] = [{unit_number: '', services: []}];\r\n  loading: boolean = false;\r\n  unit_selected: any;\r\n  public state: string = 'completed';\r\n  show_reason: boolean = false;\r\n\r\n  can_copy: boolean = true;\r\n  counter: any = [];\r\n\r\n  constructor(\r\n    private driversService: DriversService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.dateTime.setHours(0, 0, 0, 0);\r\n    this.dateTime2.setHours(23, 59, 59, 59);\r\n  }\r\n\r\n  add_unit(value, i) {\r\n    if (value === '' || value === undefined) { return; }\r\n    if (i === 0) {\r\n      this.units.push({ unit_number: value, services: []});\r\n      this.units[i].unit_number = '';\r\n      this.units[i].services = [];\r\n    }\r\n  }\r\n\r\n  delete(value, i) {\r\n    if (value === '' || value === null) {\r\n      this.units.splice(i, 1);\r\n    }\r\n  }\r\n\r\n  search() {\r\n    this.loading = true;\r\n    this.unit_selected = null;\r\n\r\n    if (this.state === 'negated') {\r\n      this.show_reason = true;\r\n    } else {\r\n      this.show_reason = false;\r\n    }\r\n\r\n    const init_date = this.dateTime.getTime();\r\n    const end_date = this.dateTime2.getTime();\r\n    const unit_numbers = this.units.filter(u => u.unit_number).map(u => u.unit_number);\r\n\r\n    this.driversService.service_global({init_date, end_date, state: this.state, unit_numbers: JSON.stringify(unit_numbers)}).subscribe(\r\n      services => {\r\n        this.units = services.sort((a, b) => a.unit_number - b.unit_number);\r\n        this.loading = false;\r\n      }\r\n    )\r\n\r\n    this.driversService.service_count({init_date, end_date}).subscribe(\r\n      count => this.counter = count\r\n    )\r\n  }\r\n\r\n  clean() {\r\n    this.units = [{unit_number: '', services: []}];\r\n    this.unit_selected = null;\r\n  }\r\n\r\n  calculateTotal(s) {\r\n    let total = s.tariff ? s.tariff.cost : 0;\r\n    s.fees.map(f => {\r\n      total += f.price;\r\n    })\r\n\r\n    return total;\r\n  }\r\n\r\n  total() {\r\n    let total = 0;\r\n    this.units.map(u => {\r\n      total += u.services.length;\r\n    });\r\n\r\n    return total;\r\n  }\r\n\r\n  total_request() {\r\n    let total = 0;\r\n    this.counter.map(c => total += c.count)\r\n    return total;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/GlobalServicesComponent/global.services.component.ts","module.exports = \"<div class=\\\"ui middle aligned center aligned grid\\\" style=\\\"background-color: #212121; height: 100vh;\\\">\\r\\n  <div class=\\\"column\\\">\\r\\n    <h2 class=\\\"ui teal image header\\\">\\r\\n      <img src=\\\"assets/xcero_oficial.png\\\" class=\\\"image\\\">\\r\\n    </h2>\\r\\n    <form class=\\\"ui large form \\\" [formGroup]=\\\"loginForm\\\">\\r\\n      <div class=\\\"ui stacked segment\\\">\\r\\n        <div class=\\\"field \\\">\\r\\n          <div class=\\\"ui left icon input\\\">\\r\\n            <i class=\\\"user icon\\\"></i>\\r\\n            <input type=\\\"text\\\" name=\\\"account\\\" placeholder=\\\"Nombre de usuario\\\" formControlName=\\\"account\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"field \\\">\\r\\n          <div class=\\\"ui left icon input\\\">\\r\\n            <i class=\\\"lock icon\\\"></i>\\r\\n            <input type=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Contraseña\\\" formControlName=\\\"password\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <button class=\\\"ui fluid large yellow submit button\\\" [disabled]=\\\"loginForm.invalid || loading\\\" (click)=\\\"localLogin()\\\">Iniciar sesión</button>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"ui error message\\\" *ngIf=\\\"errorMessage\\\">\\r\\n        <p>{{errorMessage}}</p>\\r\\n      </div>\\r\\n\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<style>\\r\\n  body {\\r\\n    background-color: #DADADA;\\r\\n  }\\r\\n\\r\\n  body>.grid {\\r\\n    height: 100%;\\r\\n  }\\r\\n\\r\\n  .image {\\r\\n    margin-top: -100px;\\r\\n  }\\r\\n\\r\\n  .column {\\r\\n    max-width: 450px;\\r\\n  }\\r\\n\\r\\n</style>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/LoginComponent/login.component.html\n// module id = ./src/app/LoginComponent/login.component.html\n// module chunks = main","import { Component, OnInit } from \"@angular/core\";\r\nimport { AuthenticationService } from '../_services/authentication.service';\r\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms'\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  templateUrl: './login.component.html'\r\n})\r\n\r\nexport class LoginComponent implements OnInit {\r\n  error: boolean = false\r\n  loading: boolean = false\r\n  errorMessage = ''\r\n\r\n  loginForm: FormGroup\r\n  account: FormControl\r\n  password: FormControl\r\n\r\n  constructor(\r\n    private authenticationService: AuthenticationService,\r\n    private fb: FormBuilder,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.account = this.fb.control('', Validators.required)\r\n    this.password = this.fb.control('', Validators.required)\r\n\r\n    this.loginForm = this.fb.group({\r\n      account: this.account,\r\n      password: this.password\r\n    })\r\n  }\r\n\r\n  localLogin() {\r\n    this.loading = true\r\n    this.authenticationService.localLogin(this.loginForm.value).subscribe(\r\n      response => {\r\n        this.loading = false\r\n        const role = response.user.role\r\n        localStorage.setItem('token', response.token)\r\n        localStorage.setItem('currentUser', JSON.stringify(response.user))\r\n\r\n        this.router.navigate(['/dashboard']);\r\n      },\r\n      error => {\r\n        this.loading = false\r\n        if (error._body == 'Unauthorized') {\r\n          this.error = true\r\n          this.errorMessage = 'Nombre de usuario o contraseña incorrectos.'\r\n        }\r\n      }\r\n    )\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/LoginComponent/login.component.ts","module.exports = \"<div class=\\\"ui container grid\\\">\\r\\n  <div class=\\\"column\\\"> <br><br>\\r\\n    <form  class=\\\"ui form\\\">\\r\\n      <div class=\\\"field\\\">\\r\\n        <textarea cols=\\\"3\\\" rows=\\\"3\\\" placeholder=\\\"Ingresa un nuevo mensaje\\\" name=\\\"body\\\" [(ngModel)]=\\\"body\\\"></textarea>\\r\\n      </div>\\r\\n    </form> <br>\\r\\n    <button class=\\\"ui primary submit labeled icon button\\\" [disabled]=\\\"!body\\\" (click)=\\\"create()\\\">\\r\\n      <i class=\\\"icon edit\\\"></i> Enviar aviso\\r\\n    </button>\\r\\n\\r\\n    <div class=\\\"ui message\\\" *ngFor=\\\"let notice of notices\\\">\\r\\n      <i class=\\\"close icon\\\" (click)=\\\"delete(notice._id)\\\"></i>\\r\\n      <div class=\\\"header\\\">\\r\\n        {{notice.date | date:'dd/MM/yy hh:mm aa'}}\\r\\n      </div>\\r\\n      <p>{{notice.body}}</p>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/NoticeComponent/notice.component.html\n// module id = ./src/app/NoticeComponent/notice.component.html\n// module chunks = main","import { Component, OnInit } from \"@angular/core\";\r\nimport { DriversService } from \"../_services/drivers.service\";\r\n\r\n@Component({\r\n  templateUrl: './notice.component.html'\r\n})\r\n\r\nexport class NoticeComponent implements OnInit {\r\n  body: string = '';\r\n  public notices: any[] = [];\r\n  constructor(\r\n    private driversService: DriversService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.driversService.notice_list().subscribe(\r\n      notices => this.notices = notices\r\n    )\r\n  }\r\n\r\n  create() {\r\n    const notice = {\r\n      body: this.body,\r\n      date: (new Date).getTime()\r\n    }\r\n\r\n    this.driversService.notice_create(notice).subscribe(\r\n      response => {\r\n        this.notices.unshift(response);\r\n        this.body = '';\r\n      }\r\n    )\r\n  }\r\n\r\n  delete(id) {\r\n    this.driversService.notice_delete(id).subscribe(\r\n      notice => this.notices = this.notices.filter(n => id !== n._id)\r\n    )\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/NoticeComponent/notice.component.ts","module.exports = \"<div class=\\\"ui padded grid\\\">\\r\\n  <div class=\\\"four wide column\\\">\\r\\n\\r\\n    <div class=\\\"ui list\\\">\\r\\n        <div class=\\\"item\\\" *ngFor=\\\"let place of places\\\">\\r\\n          <div class=\\\"header\\\"> <i style=\\\"color: red; cursor: pointer;\\\" (click)=\\\"selectPlace(place); modal.show()\\\">x</i> {{place.name}}</div>\\r\\n          {{place.address}}\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    <h5 *ngIf=\\\"places.length == 0\\\">Aún no hay lugares registrados.</h5>\\r\\n  </div>\\r\\n  <div class=\\\"twelve wide column\\\">\\r\\n    <agm-map [latitude]=\\\"latitude\\\" [longitude]=\\\"longitude\\\" [scrollwheel]=\\\"false\\\" [zoom]=\\\"zoom\\\">\\r\\n      <agm-marker *ngFor=\\\"let marker of markers\\\" [label]=\\\"marker.label\\\" [latitude]=\\\"marker.latitude\\\" [longitude]=\\\"marker.longitude\\\"></agm-marker>\\r\\n    </agm-map>\\r\\n\\r\\n    <form class=\\\"ui form\\\" style=\\\"margin-top: 1em;\\\">\\r\\n        <div class=\\\"field\\\">\\r\\n          <label>Nombre</label>\\r\\n          <input type=\\\"text\\\" name=\\\"place_name\\\" [(ngModel)]=\\\"place_name\\\" placeholder=\\\"Nombre lugar\\\">\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"field\\\">\\r\\n          <label>Dirección</label>\\r\\n          <input type=\\\"text\\\" #search placeholder=\\\"Nuevo lugar\\\">\\r\\n        </div>\\r\\n    </form>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<sm-modal class=\\\"basic\\\" #modal>\\r\\n    <modal-content *ngIf=\\\"place_selected\\\">\\r\\n        <h2>¿Estás seguro de querer borrar {{place_selected.name}}?</h2>\\r\\n        <p>Se borrarán todas las tarifas relacionadas a este lugar.</p>\\r\\n    </modal-content>\\r\\n    <modal-actions>\\r\\n      <button class=\\\"ui button\\\" style=\\\"margin-right: 10px;\\\" (click)=\\\"modal.hide()\\\">Cancelar</button>\\r\\n      <button class=\\\"ui button red\\\" (click)=\\\"deletePlace(modal)\\\">Eliminar</button>\\r\\n    </modal-actions>\\r\\n  </sm-modal>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/PlacesComponent/places.component.html\n// module id = ./src/app/PlacesComponent/places.component.html\n// module chunks = main","import {\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n  ElementRef,\r\n  NgZone\r\n} from \"@angular/core\";\r\nimport { PlacesService } from \"../_services/places.service\";\r\nimport { MapsAPILoader } from \"@agm/core\";\r\nimport {} from \"@types/googlemaps\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\n\r\n@Component({\r\n  templateUrl: \"./places.component.html\"\r\n})\r\nexport class PlacesComponent implements OnInit {\r\n  base_id: string;\r\n  places: any[] = [];\r\n  markers: any[] = [];\r\n\r\n  public latitude: number;\r\n  public longitude: number;\r\n  public zoom: number;\r\n\r\n  public place_name: string;\r\n\r\n  place_selected: any;\r\n\r\n  @ViewChild(\"search\") public searchElementRef: ElementRef;\r\n\r\n  constructor(\r\n    private placeService: PlacesService,\r\n    private mapsAPILoader: MapsAPILoader,\r\n    private ngZone: NgZone,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.zoom = 9;\r\n    this.latitude = 18.703139;\r\n    this.longitude = -97.911509;\r\n\r\n    this.route.parent.params.subscribe(\r\n      params => this.base_id = params['id']\r\n    );\r\n\r\n    this.placeService.places_by_base(this.base_id).subscribe(places => {\r\n      this.places = places;\r\n\r\n      this.places.map(place => {\r\n        const marker = {\r\n          longitude: Number(place.coords[0]),\r\n          latitude: Number(place.coords[1]),\r\n          label: place.name\r\n        };\r\n\r\n        this.markers.push(marker);\r\n      });\r\n    });\r\n\r\n\r\n    this.mapsAPILoader.load().then(() => {\r\n      const autocomplete = new google.maps.places.Autocomplete(\r\n        this.searchElementRef.nativeElement,\r\n        {\r\n          types: [\"address\"]\r\n        }\r\n      );\r\n      autocomplete.addListener(\"place_changed\", () => {\r\n        this.ngZone.run(() => {\r\n          const place: google.maps.places.PlaceResult = autocomplete.getPlace();\r\n\r\n          if (place.geometry === undefined || place.geometry === null) {\r\n            return;\r\n          }\r\n\r\n          const new_place = {\r\n            name: this.place_name,\r\n            lat: place.geometry.location.lat(),\r\n            lng: place.geometry.location.lng(),\r\n            address: place.formatted_address,\r\n            place_id: place.id,\r\n            base: this.base_id\r\n          };\r\n\r\n          this.placeService.place_create(this.base_id, new_place).subscribe(place_created => {\r\n            const marker = {\r\n              longitude: place.geometry.location.lng(),\r\n              latitude: place.geometry.location.lat(),\r\n              label: place.name\r\n            };\r\n\r\n            this.markers.push(marker);\r\n            this.places.push(place_created);\r\n\r\n            this.place_name = \"\";\r\n            this.searchElementRef.nativeElement.value = \"\";\r\n          });\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  selectPlace(place) {\r\n    this.place_selected = place;\r\n  }\r\n\r\n  deletePlace(modal) {\r\n    this.placeService.place_delete(this.base_id, this.place_selected._id).subscribe(\r\n      place => {\r\n        this.places = this.places.filter(p => p._id != place._id);\r\n        modal.hide();\r\n      }\r\n    )\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/PlacesComponent/places.component.ts","import { Component, OnInit } from \"@angular/core\";\r\nimport { DriversService } from \"../_services/drivers.service\";\r\n\r\n@Component({\r\n  templateUrl: './report.drivers.component.html'\r\n})\r\n\r\nexport class ReportDriversComponent implements OnInit {\r\n  public reports: any[] = []\r\n  constructor(\r\n    private driversService: DriversService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.driversService.reports_list().subscribe(\r\n      reports => this.reports = reports\r\n    )\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/ReportDriversComponent/report.driver.component.ts","module.exports = \"<div class=\\\"ui container grid\\\" style=\\\"padding-top: 5em;\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"ten wide column\\\">\\r\\n        <h3 *ngIf=\\\"reports.length == 0\\\">Aún no hay reportes.</h3>\\r\\n\\r\\n\\r\\n          <div class=\\\"ui visible message\\\" *ngFor=\\\"let report of reports\\\">\\r\\n            <div class=\\\"comment\\\">\\r\\n              <div class=\\\"content\\\">\\r\\n                <a class=\\\"author\\\">\\r\\n                    <b>{{report.reason}}</b>\\r\\n                    <span style=\\\"float: right;\\\">{{report.date | date:'dd/MM/yy'}}</span>\\r\\n                </a>\\r\\n                <div class=\\\"text\\\">\\r\\n                    <b>{{report.driver?.full_name}}</b> <br>\\r\\n                    {{report.user?.full_name}} <br>\\r\\n                    {{report.text}}\\r\\n                  <p *ngIf=\\\"report.phone\\\">Télefono: {{report.phone}}</p>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/ReportDriversComponent/report.drivers.component.html\n// module id = ./src/app/ReportDriversComponent/report.drivers.component.html\n// module chunks = main","module.exports = \"<sm-select  placeholder=\\\"Seleccionar colonia o lugar\\\"\\r\\nclass=\\\"fluid search\\\"\\r\\n(onChange)=\\\"selectSites($event)\\\"\\r\\n[control]=\\\"site1\\\">\\r\\n  <option *ngFor=\\\"let site of sites\\\" [value]=\\\"site._id\\\">{{site.name}}</option>\\r\\n</sm-select> <br>\\r\\n\\r\\n<sm-select  placeholder=\\\"Seleccionar colonia o lugar\\\"\\r\\nclass=\\\"fluid search\\\"\\r\\n(onChange)=\\\"selectSites($event)\\\"\\r\\n[control]=\\\"site2\\\">\\r\\n  <option *ngFor=\\\"let site of sites\\\" [value]=\\\"site._id\\\">{{site.name}}</option>\\r\\n</sm-select>\\r\\n\\r\\n<div class=\\\"ui active centered inline loader\\\" style=\\\"margin-top: 20px;\\\" *ngIf=\\\"loading\\\"></div>\\r\\n\\r\\n\\r\\n<div class=\\\"ui message\\\" *ngIf=\\\"tariff && !loading\\\">\\r\\n  <i class=\\\"close icon\\\" (click)=\\\"deleted()\\\"></i>\\r\\n  <div>\\r\\n    {{tariff.cost | currency:'MXN':'symbol-narrow'}}\\r\\n    <edit-tariff [tariff_id]=\\\"tariff._id\\\" (delete)=\\\"deleted()\\\" (update)=\\\"edited($event)\\\"></edit-tariff>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<h3 *ngIf=\\\"!tariff && site1.value && site2.value && !loading\\\">No hay una tarifa registrada para estas colonias</h3>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/TariffComponent/CheckTariffComponent/check.tariff.component.html\n// module id = ./src/app/TariffComponent/CheckTariffComponent/check.tariff.component.html\n// module chunks = main","import { Component, OnInit } from \"@angular/core\";\r\nimport { PlacesService } from \"../../_services/places.service\";\r\nimport { ColonyService } from \"../../_services/colony.service\";\r\nimport { Observable } from \"rxjs/Rx\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { TariffService } from \"../../_services/tariff.service\";\r\n\r\n@Component({\r\n  templateUrl: './check.tariff.component.html',\r\n  selector: 'check-tariff'\r\n})\r\n\r\nexport class CheckTariffComponent implements OnInit {\r\n  sites: any[] = [];\r\n  site1: FormControl;\r\n  site2: FormControl;\r\n  tariff: any;\r\n  loading: boolean = false;\r\n  constructor(\r\n    private placeService: PlacesService,\r\n    private colonyService: ColonyService,\r\n    private tariffService: TariffService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.site1 = new FormControl();\r\n    this.site2 = new FormControl();\r\n\r\n    const places$ = this.placeService.places_list();\r\n    const colonies$ = this.colonyService.colony_list();\r\n\r\n    Observable.zip(\r\n      places$,\r\n      colonies$,\r\n      (\r\n        places: any[],\r\n        colonies: any[]\r\n      ) => ({ places, colonies })\r\n    ).subscribe( data => {\r\n      this.sites = [...data.places, ...data.colonies];\r\n    })\r\n  }\r\n\r\n  selectSites() {\r\n    if (this.site1.value && this.site2.value) {\r\n      this.loading = true;\r\n      let site1 = this.sites.find(s => this.site1.value == s._id)\r\n      let site2 = this.sites.find(s => this.site2.value == s._id)\r\n\r\n      let check = {};\r\n\r\n      if (site1.group || site2.group) {\r\n        check = {\r\n          colony_one: site1.group ? site1._id : site2._id,\r\n          colony_two: site1.group && site2.group ? site2._id : '',\r\n          place_one: site1.base ? site1._id : site2._id\r\n        }\r\n      } else {\r\n        check = {\r\n          place_one: site1._id,\r\n          place_two: site2._id\r\n        }\r\n      }\r\n\r\n      this.tariffService.tariff_check(check).subscribe(\r\n        tariff => {\r\n          this.tariff = tariff;\r\n          this.loading = false;\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  deleted() {\r\n    this.tariff = null;\r\n    this.site1  = new FormControl();\r\n    this.site2  = new FormControl();\r\n  }\r\n\r\n  edited(tariff) {\r\n    this.tariff = tariff;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/TariffComponent/CheckTariffComponent/check.tariff.component.ts","module.exports = \"<sm-button class=\\\"\\\" icon=\\\"pencil\\\" (click)=\\\"edit.show(); new_cost = tariff.cost;\\\"></sm-button>\\r\\n<sm-button class=\\\"negative\\\" icon=\\\"trash\\\" (click)=\\\"deleteTariff()\\\"></sm-button>\\r\\n\\r\\n<sm-modal class=\\\"\\\" #edit>\\r\\n  <modal-content>\\r\\n    <div *ngIf=\\\"tariff\\\">\\r\\n      <h3>\\r\\n        {{tariff.origin_group ? tariff.origin_group?.name + ' - ' + tariff.origin_group?.base.name : tariff.origin_place?.name\\r\\n        + ' - ' + tariff.origin_place?.base.name}}\\r\\n        <==>\\r\\n          {{tariff.destiny_group ? tariff.destiny_group?.name + ' - ' + tariff.destiny_group?.base.name\\r\\n          : tariff.destiny_place?.name + ' - ' + tariff.destiny_place?.base.name}}\\r\\n      </h3>\\r\\n\\r\\n      <div class=\\\"ui form\\\">\\r\\n        <div class=\\\"fluid field\\\">\\r\\n          <input type=\\\"number\\\" placeholder=\\\"Costo\\\" [(ngModel)]=\\\"new_cost\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </modal-content>\\r\\n  <modal-actions>\\r\\n    <div class=\\\"ui buttons\\\">\\r\\n      <div class=\\\"ui button negative\\\" (click)=\\\"edit.hide()\\\">Cancelar</div>\\r\\n      <div class=\\\"ui button primary\\\" (click)=\\\"editTariff(edit)\\\" style=\\\"margin-left: 10px;\\\">Guardar cambios</div>\\r\\n    </div>\\r\\n  </modal-actions>\\r\\n</sm-modal>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/TariffComponent/EditTariffComponent/edit.tariff.component.html\n// module id = ./src/app/TariffComponent/EditTariffComponent/edit.tariff.component.html\n// module chunks = main","import { Component, Input, Output, EventEmitter, OnInit } from \"@angular/core\";\r\nimport { TariffService } from \"../../_services/tariff.service\";\r\n\r\n@Component({\r\n  templateUrl: './edit.tariff.component.html',\r\n  selector: 'edit-tariff'\r\n})\r\n\r\nexport class EditTariffComponent implements OnInit {\r\n  @Input() tariff_id;\r\n  @Output() update: EventEmitter<any> = new EventEmitter<any>();\r\n  @Output() delete: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  new_cost: number;\r\n  tariff: any;\r\n\r\n  constructor(\r\n    private tariffService: TariffService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    console.log(this.tariff)\r\n    this.tariffService.tariff_details(this.tariff_id).subscribe(\r\n      tariff => this.tariff = tariff\r\n    )\r\n  }\r\n\r\n  deleteTariff() {\r\n    this.tariffService.tariff_delete(this.tariff._id).subscribe(tariff => {\r\n      this.delete.emit(tariff._id);\r\n    });\r\n  }\r\n\r\n  editTariff(modal) {\r\n    const tariff = Object.assign({}, this.tariff);\r\n    tariff.cost = this.new_cost;\r\n\r\n    this.tariffService.tariff_update(tariff).subscribe(tariff_update => {\r\n      this.update.emit(tariff_update);\r\n      modal.hide();\r\n    });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/TariffComponent/EditTariffComponent/edit.tariff.component.ts","import { Component, Input } from \"@angular/core\";\r\nimport { TariffService } from \"../../_services/tariff.service\";\r\n\r\n@Component({\r\n  templateUrl: './search.teriff.component.html',\r\n  selector: 'search-tariff'\r\n})\r\n\r\nexport class SearchTariffComponent {\r\n  @Input() groups_places: any[] = [];\r\n\r\n  group_selected = '';\r\n  group_selected2 = '';\r\n  tariff: any;\r\n  loading: boolean = false;\r\n\r\n  constructor(\r\n    private tariffService: TariffService\r\n  ) {}\r\n\r\n  selectGroup() {\r\n    if (this.group_selected && this.group_selected2) {\r\n      this.loading = true;\r\n      this.tariffService.tariff_check_groups(this.group_selected, this.group_selected2).subscribe(\r\n        tariff => {\r\n          this.tariff = tariff;\r\n          this.loading = false;\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  deleted() {\r\n    this.tariff = null;\r\n    this.group_selected = this.group_selected2 = '';\r\n  }\r\n\r\n  edited(tariff) {\r\n    this.tariff = tariff;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/TariffComponent/SearchTariff/search.tariff.component.ts","module.exports = \"<div class=\\\"ui form\\\">\\r\\n  <div class=\\\"field\\\">\\r\\n    <select [(ngModel)]=\\\"group_selected\\\" (change)=\\\"selectGroup()\\\">\\r\\n      <option value=\\\"\\\">Selecciona un grupo o lugar de origen</option>\\r\\n      <option *ngFor=\\\"let gp of groups_places\\\" [value]=\\\"gp._id\\\">{{gp.base + ' - ' + gp.name}}</option>\\r\\n    </select>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"field\\\">\\r\\n    <select [(ngModel)]=\\\"group_selected2\\\" (change)=\\\"selectGroup()\\\">\\r\\n      <option value=\\\"\\\">Selecciona un grupo o lugar de origen</option>\\r\\n      <option *ngFor=\\\"let gp of groups_places\\\" [value]=\\\"gp._id\\\">{{gp.base + ' - ' + gp.name}}</option>\\r\\n    </select>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"ui active centered inline loader\\\" style=\\\"margin-top: 20px;\\\" *ngIf=\\\"loading\\\"></div>\\r\\n\\r\\n<div class=\\\"ui message\\\" *ngIf=\\\"tariff && !loading\\\">\\r\\n  <i class=\\\"close icon\\\" (click)=\\\"deleted()\\\"></i>\\r\\n  <div>\\r\\n    {{tariff.cost | currency:'MXN':'symbol-narrow'}}\\r\\n    <edit-tariff [tariff_id]=\\\"tariff._id\\\" (delete)=\\\"deleted()\\\" (update)=\\\"edited($event)\\\"></edit-tariff>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<h3 *ngIf=\\\"!tariff && group_selected && group_selected2 && !loading\\\">No hay una tarifa registrada para estas colonias</h3>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/TariffComponent/SearchTariff/search.teriff.component.html\n// module id = ./src/app/TariffComponent/SearchTariff/search.teriff.component.html\n// module chunks = main","module.exports = \"<div class=\\\"ui internally celled padded grid\\\" style=\\\"height: 94vh;;\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"four wide column\\\">\\r\\n\\r\\n      <div class=\\\"ui form\\\">\\r\\n\\r\\n        <h4 class=\\\"ui dividing header\\\">Nueva tarifa</h4>\\r\\n\\r\\n        <div class=\\\"field\\\">\\r\\n          <select [(ngModel)]=\\\"group_selected\\\" (change)=\\\"selectGroup()\\\">\\r\\n            <option value=\\\"\\\">Selecciona un grupo o lugar de origen</option>\\r\\n            <option *ngFor=\\\"let gp of groups_places\\\" [value]=\\\"gp._id\\\">{{gp.base + ' - ' + gp.name}}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"ui active centered inline loader\\\" style=\\\"margin-top: 20px;\\\" *ngIf=\\\"loading_available\\\"></div>\\r\\n\\r\\n        <div class=\\\"field\\\" *ngIf=\\\"group_selected && groups_places_available.length > 0 && !loading_available\\\">\\r\\n          <select [(ngModel)]=\\\"second_group_selected\\\">\\r\\n            <option value=\\\"\\\">Selecciona un grupo o lugar de destino</option>\\r\\n            <option *ngFor=\\\"let gp of groups_places_available\\\" [value]=\\\"gp._id\\\">{{gp.base + ' - ' + gp.name}}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\" field\\\" *ngIf=\\\"second_group_selected && !loading_available\\\">\\r\\n          <input type=\\\"number\\\" placeholder=\\\"Costo\\\" [(ngModel)]=\\\"cost\\\">\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n\\r\\n      <button class=\\\"ui button yellow\\\" style=\\\"margin-top: 10px;\\\" [disabled]=\\\"!group_selected || !second_group_selected || !cost\\\"\\r\\n        (click)=\\\"saveTariff()\\\">\\r\\n        Guardar\\r\\n      </button>\\r\\n\\r\\n      <h4 class=\\\"ui dividing header\\\">Buscar tarifa</h4>\\r\\n      <search-tariff [groups_places]=\\\"groups_places\\\"></search-tariff>\\r\\n\\r\\n      <!-- <h4 class=\\\"ui dividing header\\\">Verificar tarifa por colonia</h4>\\r\\n      <check-tariff></check-tariff> -->\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"twelve wide column\\\">\\r\\n      <!-- <div class=\\\"ui buttons\\\" style=\\\"float: right;\\\" *ngIf=\\\"tariffs.length > 0\\\">\\r\\n        <button class=\\\"ui yellow button\\\" (click)=\\\"updatemodal.show(); select_quantity = true;\\\">Actualizar por cantidad</button>\\r\\n        <div class=\\\"or\\\" data-text=\\\"ó\\\"></div>\\r\\n        <button class=\\\"ui yellow button\\\" (click)=\\\"updatemodal.show(); select_percentage = true;\\\">Actualizar por porcentaje</button>\\r\\n      </div> -->\\r\\n\\r\\n      <!-- <sm-dropdown title=\\\"Opciones\\\" class=\\\"pointing floating labeled icon button yellow\\\">\\r\\n          <sm-item (click)=\\\"updatemodal.show(); select_quantity = true;\\\">Actualizar por cantidad</sm-item>\\r\\n          <sm-item (click)=\\\"updatemodal.show(); select_percentage = true;\\\">Actualizar por porcentaje</sm-item>\\r\\n          <sm-item (click)=\\\"reload()\\\">Volver a cargar tarifas</sm-item>\\r\\n      </sm-dropdown> -->\\r\\n\\r\\n      <button class=\\\"ui button yellow\\\" (click)=\\\"updatemodal.show(); select_quantity = true;\\\">\\r\\n        Actualizar por cantidad\\r\\n      </button>\\r\\n\\r\\n      <button class=\\\"ui button yellow\\\" (click)=\\\"updatemodal.show(); select_percentage = true;\\\">\\r\\n        Actualizar por porcentaje\\r\\n      </button>\\r\\n\\r\\n      <button class=\\\"ui button yellow\\\" (click)=\\\"reload()\\\">\\r\\n        Volver a cargar tarifas\\r\\n      </button>\\r\\n\\r\\n      <div class=\\\"ui form\\\" style=\\\"float:right;\\\">\\r\\n        <div class=\\\"field\\\" style=\\\"display: inline-block\\\">\\r\\n          <select [(ngModel)]=\\\"base_selected\\\" (change)=\\\"selectBase(base_selected)\\\">\\r\\n            <option value=\\\"\\\">Todas las tarifas</option>\\r\\n            <option *ngFor=\\\"let base of bases\\\" [value]=\\\"base._id\\\">{{base.name}}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"ui active inline loader\\\" *ngIf=\\\"loading_groups\\\" style=\\\"margin-left: 20px;\\\"></div>\\r\\n\\r\\n        <div class=\\\"field\\\" style=\\\"display: inline-block\\\" *ngIf=\\\"base_selected && !loading_groups\\\">\\r\\n          <select [(ngModel)]=\\\"group_selected_report\\\" (change)=\\\"selectGroupByBase(group_selected_report)\\\">\\r\\n            <option value=\\\"\\\">Selecciona un grupo</option>\\r\\n            <option *ngFor=\\\"let group of groups\\\" [value]=\\\"group._id\\\">{{group.name}}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"ui section divider\\\" style=\\\"clear: both;\\\" *ngIf=\\\"tariffs.length > 0\\\"></div>\\r\\n\\r\\n      <div class=\\\"ui active centered inline loader huge\\\" style=\\\"margin-top: 250px; margin-bottom: 250px;\\\" *ngIf=\\\"loading_tariffs\\\"></div>\\r\\n\\r\\n      <div class=\\\"ui middle aligned divided list\\\" *ngIf=\\\"(tariffs.length > 0) && !loading_tariffs\\\">\\r\\n        <div class=\\\"item\\\" *ngFor=\\\"let tariff of tariffs | paginate:{ id:'server', itemsPerPage: 15, currentPage: current, totalItems: count }\\\">\\r\\n          <div class=\\\"right floated content\\\">\\r\\n            <span>{{tariff.cost | currency:'MXN':'symbol-narrow'}} &nbsp; &nbsp;</span>\\r\\n            <sm-button class=\\\"\\\" icon=\\\"pencil\\\" (click)=\\\"edit.show(); selected_tariff = tariff;\\\"></sm-button>\\r\\n            <sm-button class=\\\"negative\\\" icon=\\\"trash\\\" (click)=\\\"deleteTariff(tariff._id)\\\"></sm-button>\\r\\n          </div>\\r\\n          <div class=\\\"content\\\">\\r\\n            <p>\\r\\n              {{ tariff.origin_group ? tariff.origin_group?.base.name + ' - ' + tariff.origin_group?.name  : tariff.origin_place?.base.name + ' - ' + tariff.origin_place?.name }}\\r\\n              <b style=\\\"font-size: 1.2em;\\\"><--></b>\\r\\n                {{tariff.destiny_group ? tariff.destiny_group?.base.name + ' - ' + tariff.destiny_group?.name  : tariff.destiny_place?.base.name + ' - ' + tariff.destiny_place?.name\\r\\n                }}\\r\\n            </p>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n     <pagination-controls  id=\\\"server\\\" *ngIf=\\\"!base_selected\\\"\\r\\n        (pageChange)=\\\"pageChanged($event)\\\"\\r\\n        autoHide=\\\"true\\\"\\r\\n        directionLinks=\\\"false\\\"\\r\\n                      previousLabel=\\\"Anterior\\\"\\r\\n                      nextLabel=\\\"Siguiente\\\"\\r\\n                      screenReaderPaginationLabel=\\\"Pagination\\\"\\r\\n                      screenReaderPageLabel=\\\"page\\\"\\r\\n                      screenReaderCurrentLabel=\\\"You're on page\\\">\\r\\n</pagination-controls>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <sm-modal class=\\\"\\\" #edit>\\r\\n    <modal-content>\\r\\n      <div *ngIf=\\\"selected_tariff\\\">\\r\\n        <h3>\\r\\n          {{selected_tariff.origin_group ? selected_tariff.origin_group?.name + ' - ' + selected_tariff.origin_group?.base.name : selected_tariff.origin_place?.name\\r\\n          + ' - ' + selected_tariff.origin_place?.base.name}}\\r\\n          <==>\\r\\n            {{selected_tariff.destiny_group ? selected_tariff.destiny_group?.name + ' - ' + selected_tariff.destiny_group?.base.name\\r\\n            : selected_tariff.destiny_place?.name + ' - ' + selected_tariff.destiny_place?.base.name}}\\r\\n        </h3>\\r\\n\\r\\n        <div class=\\\"ui form\\\">\\r\\n          <div class=\\\"fluid field\\\">\\r\\n            <input type=\\\"number\\\" placeholder=\\\"Costo\\\" [(ngModel)]=\\\"selected_tariff.cost\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </modal-content>\\r\\n    <modal-actions>\\r\\n      <div class=\\\"ui buttons\\\">\\r\\n        <div class=\\\"ui button negative\\\" (click)=\\\"edit.hide()\\\">Cancelar</div>\\r\\n        <div class=\\\"ui button primary\\\" (click)=\\\"editTariff(edit)\\\" style=\\\"margin-left: 10px;\\\">Guardar cambios</div>\\r\\n      </div>\\r\\n    </modal-actions>\\r\\n  </sm-modal>\\r\\n\\r\\n  <sm-modal class=\\\"\\\" #updatemodal>\\r\\n    <modal-content>\\r\\n      <div>\\r\\n        <h3 *ngIf=\\\"select_quantity\\\">\\r\\n          Actualizar por cantidad\\r\\n        </h3>\\r\\n\\r\\n        <h3 *ngIf=\\\"select_percentage\\\">\\r\\n          Actualizar por porcentaje\\r\\n        </h3>\\r\\n\\r\\n        <div class=\\\"ui form\\\">\\r\\n          <div class=\\\"fluid field\\\">\\r\\n            <input type=\\\"number\\\" placeholder=\\\"Cantidad a sumar\\\" *ngIf=\\\"select_quantity\\\" [(ngModel)]=\\\"update_type.quantity\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"ui form\\\">\\r\\n          <div class=\\\"fluid field\\\">\\r\\n            <input type=\\\"number\\\" placeholder=\\\"Porcentaje a sumar\\\" *ngIf=\\\"select_percentage\\\" [(ngModel)]=\\\"update_type.percentage\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n    </modal-content>\\r\\n    <modal-actions>\\r\\n      <div class=\\\"ui buttons\\\">\\r\\n        <div class=\\\"ui button negative\\\" (click)=\\\"updatemodal.hide(); select_quantity = false; select_percentage = false;\\\">Cancelar</div>\\r\\n        <div class=\\\"ui button primary\\\" [ngClass]=\\\"{'loading': loading_all, 'disabled': loading_all}\\\" (click)=\\\"updateAll(updatemodal)\\\" style=\\\"margin-left: 10px;\\\">Guardar cambios</div>\\r\\n      </div>\\r\\n    </modal-actions>\\r\\n  </sm-modal>\\r\\n\\r\\n</div>\\r\\n\\r\\n<style>\\r\\n  .ui.active.dimmer.modals.transition {\\r\\n    display: flex !important;\\r\\n    display: -ms-flexbox !important;\\r\\n  }\\r\\n</style>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/TariffComponent/tariff.component.html\n// module id = ./src/app/TariffComponent/tariff.component.html\n// module chunks = main","import { Component, OnInit } from \"@angular/core\";\r\nimport { GroupService } from \"../_services/group.service\";\r\nimport { TariffService } from \"../_services/tariff.service\";\r\nimport { Tariff } from \"../_models/tariff\";\r\nimport { BaseService } from \"../_services/bases.service\";\r\n\r\n@Component({\r\n  templateUrl: \"./tariff.component.html\"\r\n})\r\nexport class TariffComponent implements OnInit {\r\n  private groups_places: any[] = [];\r\n  private group_selected: string = \"\";\r\n  public base_selected: string = '';\r\n  public group_selected_report: string = '';\r\n\r\n  private groups_places_available: any[] = [];\r\n\r\n  private second_group_selected: string = \"\";\r\n  public cost: number;\r\n\r\n  private loading_available: boolean;\r\n  private loading_all: boolean;\r\n\r\n  private selected_tariff: Tariff;\r\n\r\n  public select_percentage: boolean = false;\r\n  public select_quantity: boolean = false;\r\n  public update_type: any = {};\r\n\r\n  public tariffs: Tariff[] = [];\r\n\r\n  public pages: any = [];\r\n  public current: number;\r\n  public count: number;\r\n  public loading_tariffs: boolean = false;\r\n  public loading_groups: boolean = false;\r\n\r\n  public bases: any[] = [];\r\n  public groups: any[] = [];\r\n\r\n  constructor(\r\n    private groupService: GroupService,\r\n    private tariffService: TariffService,\r\n    private baseService: BaseService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.loading_tariffs = true;\r\n\r\n    this.groupService.group_place_list().subscribe(groups_places => {\r\n      this.groups_places = groups_places.sort(this.sort);\r\n    });\r\n\r\n    this.tariffService.tariff_list().subscribe(response => {\r\n      this.tariffs = response.tariffs.sort(this.sortTariffs);\r\n      this.pages = response.pages;\r\n      this.current = response.current;\r\n      this.count = response.count;\r\n      this.loading_tariffs = false;\r\n    });\r\n\r\n    this.baseService.base_list().subscribe(\r\n      bases => this.bases = bases.sort(this.sortBases)\r\n    )\r\n  }\r\n\r\n  sortTariffs(a, b) {\r\n    const aproperty1 = a.origin_group ? a.origin_group : a.origin_place;\r\n    const aproperty2 = aproperty1.base.name;\r\n\r\n    const bproperty1 = b.origin_group ? b.origin_group : b.origin_place;\r\n    const bproperty2 = bproperty1.base.name;\r\n\r\n    if (aproperty1.name < bproperty1.name) {\r\n      return -1;\r\n    }\r\n    if (aproperty1.name > bproperty1.name) {\r\n      return 1;\r\n    }\r\n\r\n    if (aproperty1.name === bproperty1.name) {\r\n      if (aproperty2 < bproperty2) {\r\n        return -1;\r\n      }\r\n      if (aproperty2 > bproperty2) {\r\n        return 1;\r\n      }\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  sortDestinyBaseAndGroup(a, b) {\r\n\r\n  }\r\n\r\n  sortBases(a, b) {\r\n    if (a.name < b.name) { return -1; }\r\n    if (a.name > b.name) { return 1; }\r\n\r\n    return 0;\r\n\r\n  }\r\n\r\n  selectGroup(last_gp?) {\r\n    if (this.group_selected === \"\") {\r\n      return;\r\n    }\r\n    const gp = this.groups_places.find(g => g._id === this.group_selected);\r\n    let params = {};\r\n    if (gp.type === \"group\") {\r\n      params = { group_id: gp._id };\r\n    } else {\r\n      params = { place_id: gp._id };\r\n    }\r\n    this.loading_available = true;\r\n    this.groupService.group_list_available(params).subscribe(groups_places => {\r\n      this.groups_places_available = groups_places.sort(this.sort);\r\n      if (last_gp) {\r\n        const last_item = this.groups_places_available.find(gp_last => gp_last.base === last_gp.base);\r\n        if (last_item) {\r\n          this.second_group_selected = last_item._id;\r\n        } else {\r\n          this.second_group_selected = '';\r\n        }\r\n      }\r\n      this.loading_available = false;\r\n    });\r\n  }\r\n\r\n  pageChanged(page) {\r\n    this.loading_tariffs = true;\r\n    this.tariffService.tariff_list(page, this.base_selected ? this.base_selected : '').subscribe(response => {\r\n      this.tariffs = response.tariffs.sort(this.sortTariffs);\r\n      if (this.base_selected) {\r\n        this.tariffs = this.tariffs.map(t => this.orderBaseName(t));\r\n      }\r\n      this.pages = response.pages;\r\n      this.current = response.current;\r\n      this.loading_tariffs = false;\r\n    });\r\n  }\r\n\r\n  saveTariff() {\r\n\r\n    const gp1 = this.groups_places.find(gp => gp._id === this.group_selected);\r\n    const gp2 = this.groups_places_available.find(\r\n      gp => gp._id === this.second_group_selected\r\n    );\r\n    let tariff = {};\r\n\r\n    if (gp1.type === \"group\") {\r\n      if (gp2.type === \"group\") {\r\n        tariff = {\r\n          origin_group: gp1._id,\r\n          destiny_group: gp2._id,\r\n          cost: this.cost\r\n        };\r\n      } else {\r\n        tariff = {\r\n          origin_group: gp1._id,\r\n          destiny_place: gp2._id,\r\n          cost: this.cost\r\n        };\r\n      }\r\n    } else {\r\n      if (gp2.type === \"group\") {\r\n        tariff = {\r\n          origin_group: gp2._id,\r\n          destiny_place: gp1._id,\r\n          cost: this.cost\r\n        };\r\n      } else {\r\n        tariff = {\r\n          origin_place: gp1._id,\r\n          destiny_place: gp2._id,\r\n          cost: this.cost\r\n        };\r\n      }\r\n    }\r\n\r\n    this.tariffService\r\n      .tariff_create(tariff as Tariff)\r\n      .subscribe(tariff_created => {\r\n        this.tariffs.push(tariff_created);\r\n        this.tariffs = this.tariffs.sort(this.sortTariffs);\r\n        this.cost = null;\r\n        this.selectGroup(gp2);\r\n      });\r\n  }\r\n\r\n  deleteTariff(tariffId) {\r\n    this.tariffService.tariff_delete(tariffId).subscribe(tariff => {\r\n      this.tariffs = this.tariffs.filter(t => t._id !== tariff._id);\r\n    });\r\n  }\r\n\r\n  editTariff(modal) {\r\n    this.tariffService.tariff_update(this.selected_tariff).subscribe(tariff => {\r\n      this.tariffs = this.tariffs.map(t => {\r\n        if (t._id === tariff._id) {\r\n          t = tariff;\r\n        }\r\n        return t;\r\n      });\r\n      modal.hide();\r\n    });\r\n  }\r\n\r\n  updateAll(modal?) {\r\n    this.loading_tariffs = true;\r\n    this.tariffService.tariff_list().subscribe(response => {\r\n      this.tariffs = response.tariffs.sort(this.sortTariffs);\r\n      this.pages = response.pages;\r\n      this.current = response.current;\r\n      this.count = response.count;\r\n      this.loading_tariffs = false;\r\n      if (modal) {\r\n        modal.hide();\r\n      }\r\n    });\r\n  }\r\n\r\n  reload() {\r\n    this.loading_tariffs = true;\r\n    this.tariffService.tariff_list().subscribe(response => {\r\n      this.tariffs = response.tariffs.sort(this.sortTariffs);\r\n      this.pages = response.pages;\r\n      this.current = response.current;\r\n      this.count = response.count;\r\n      this.loading_tariffs = false;\r\n    });\r\n  }\r\n\r\n  sort(a, b) {\r\n    if (a.base < b.base) { return -1; }\r\n    if (a.base > b.base) { return 1; }\r\n\r\n    return 0;\r\n\r\n  }\r\n\r\n  selectBase(base_id) {\r\n    console.log(base_id)\r\n    /* this.loading_tariffs = true;\r\n    if (base_id === '') {\r\n      this.tariffService.tariff_list().subscribe(\r\n        response => {\r\n          this.tariffs = response.tariffs.sort(this.sortTariffs)\r\n          this.pages = response.pages;\r\n          this.current = response.current;\r\n          this.count = response.count;\r\n          this.loading_tariffs = false;\r\n        }\r\n      )\r\n    } else {\r\n      this.tariffService.tariff_list(1, base_id).subscribe(\r\n        response => {\r\n          this.tariffs = response.tariffs.sort(this.sortTariffs).map(t => this.orderBaseName(t));\r\n          this.pages = response.pages;\r\n          this.current = response.current;\r\n          this.count = response.count;\r\n          this.loading_tariffs = false;\r\n        }\r\n      )\r\n    } */\r\n    if (base_id === '') {\r\n      this.updateAll();\r\n      this.group_selected_report = '';\r\n     } else {\r\n      this.loading_groups = true;\r\n      this.groupService.group_by_base(base_id).subscribe(\r\n        groups => {\r\n          this.groups = groups;\r\n          this.loading_groups = false;\r\n          this.group_selected_report = '';\r\n        }\r\n      )\r\n     }\r\n\r\n  }\r\n\r\n  selectGroupByBase(group_id) {\r\n    console.log(group_id)\r\n    if (group_id === '') { return; }\r\n    this.loading_tariffs = true;\r\n    this.tariffService.tariff_list(1, this.base_selected, this.group_selected_report).subscribe(\r\n      response => {\r\n        const collator = new Intl.Collator(undefined, { numeric: true, sensitivity: 'base'})\r\n        this.tariffs = response.tariffs\r\n        .sort(this.sortTariffs)\r\n        .map(t => this.orderBaseName(t))\r\n        .sort((a, b) => {\r\n          if (a.destiny_group && b.destiny_group) {\r\n\r\n            const baseA = a.destiny_group.base.name;\r\n            const groupA = a.destiny_group.name;\r\n\r\n            const baseB = b.destiny_group.base.name;\r\n            const groupB = b.destiny_group.name;\r\n\r\n            if (baseA === baseB) {\r\n              return collator.compare(groupA, groupB);\r\n            } else {\r\n              return collator.compare(baseA, baseB)\r\n            }\r\n          }\r\n        })\r\n        /* .sort((a, b) => {\r\n          if (a.destiny_group && b.destiny_group) {\r\n            return collator.compare(a.destiny_group.name, b.destiny_group.name);\r\n          }\r\n        }) */\r\n        this.loading_tariffs = false;\r\n      }\r\n    )\r\n  }\r\n\r\n  orderBaseName(a) {\r\n\r\n    if (a.origin_group && a.origin_group._id !== this.group_selected_report ) {\r\n      /* if (a.destiny_place) {\r\n        a.origin_place = a.destiny_place;\r\n        a.destiny_group = a.origin_group;\r\n\r\n        delete a.origin_group;\r\n        delete a.destiny_place;\r\n      } else {\r\n\r\n      } */\r\n\r\n      let copy = a.origin_group;\r\n      a.origin_group = a.destiny_group;\r\n      a.destiny_group = copy;\r\n    }\r\n    // if (a.origin_place && a.origin_place.base._id !== this.base_selected) {\r\n    if (a.origin_place) {\r\n        let copy = a.destiny_group;\r\n        a.destiny_place = a.origin_place;\r\n        a.origin_group = copy;\r\n        delete a.destiny_group;\r\n        delete a.origin_place;\r\n    }\r\n\r\n    return a;\r\n  }\r\n\r\n  orderNumeric(tariffs) {\r\n\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/TariffComponent/tariff.component.ts","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router'\r\n@Injectable()\r\n\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(\r\n    private router: Router\r\n  ) { }\r\n\r\n  canActivate() {\r\n    const token = localStorage.getItem('token')\r\n\r\n    if (token) {\r\n      return true;\r\n    } else {\r\n      this.router.navigate(['/login']);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/_guards/authentication.guard.ts","//export const API_URL = 'http://localhost:3019';\r\nexport const API_URL = 'http://45.56.121.162';\r\n//export const API_URL = 'http://45.33.55.120';\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/_services/API_URL.ts","import { Injectable } from '@angular/core';\r\nimport { AuthHttp } from 'angular2-jwt';\r\nimport { Observable, BehaviorSubject } from 'rxjs/Rx';\r\nimport { API_URL } from '../_services/API_URL';\r\n\r\n@Injectable()\r\n\r\nexport class AreaService {\r\n  constructor(\r\n    private http: AuthHttp\r\n  ) {}\r\n\r\n  area_create(groupId: string, area): Observable<any> {\r\n    return this.http.post(`${API_URL}/api/group/${groupId}/area`, area)\r\n      .map(r => r.json());\r\n  }\r\n\r\n  area_by_group(groupId: string): Observable<any[]> {\r\n    return this.http.get(`${API_URL}/api/group/${groupId}/area`)\r\n      .map(r => r.json());\r\n  }\r\n\r\n  area_delete(area_id: string): Observable<any> {\r\n    return this.http.delete(`${API_URL}/api/area/${area_id}`)\r\n      .map(r => r.json());\r\n  }\r\n\r\n  area_list(): Observable<any[]> {\r\n    return this.http.get(`${API_URL}/api/area`)\r\n      .map(r => r.json());\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/_services/area.service.ts","import { Injectable } from '@angular/core'\r\nimport { Http, Headers, Response, RequestOptions } from '@angular/http'\r\nimport { Observable } from \"rxjs/Rx\";\r\nimport \"rxjs/add/operator/map\";\r\nimport { API_URL } from './API_URL'\r\n@Injectable()\r\n\r\nexport class AuthenticationService {\r\n\r\n  private headers = new Headers({ \"Content-Type\": \"application/json\" });\r\n  private options = new RequestOptions({ headers: this.headers });\r\n\r\n  constructor(\r\n    private http: Http\r\n  ) { }\r\n\r\n  localLogin(credentials: any): Observable<any> {\r\n    return this.http.post(`${API_URL}/api/auth/login`, JSON.stringify(credentials), this.options)\r\n      .map(response => response.json());\r\n  }\r\n\r\n  user_create(driver: any): Observable<any> {\r\n    return this.http.post(`${API_URL}/api/auth/register`, driver)\r\n      .map(r => r.json());\r\n  }\r\n\r\n  logOut() {\r\n    localStorage.clear();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/_services/authentication.service.ts","import { Injectable } from '@angular/core';\r\nimport { AuthHttp } from 'angular2-jwt';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { API_URL } from '../_services/API_URL';\r\nimport { Base } from '../_models/base';\r\nimport { Group } from '../_models/group';\r\n\r\n@Injectable()\r\n\r\nexport class BaseService {\r\n  constructor(\r\n    private http: AuthHttp\r\n  ) {}\r\n\r\n  base_create(base: Base): Observable<Base> {\r\n    return this.http.post(`${API_URL}/api/base`, base)\r\n      .map(r => r.json())\r\n  }\r\n\r\n  base_details(baseId: string): Observable<Base> {\r\n    return this.http.get(`${API_URL}/api/base/${baseId}`)\r\n      .map(r => r.json());\r\n  }\r\n\r\n  base_list(): Observable<Base[]> {\r\n    return this.http.get(`${API_URL}/api/base`)\r\n      .map(r => r.json())\r\n  }\r\n\r\n  base_empty(baseId): Observable<any> {\r\n    return this.http.put(`${API_URL}/api/base/empty_stack/${baseId}`, {})\r\n      .map(r => r.json());\r\n  }\r\n\r\n  base_delete(baseId: string): Observable<any> {\r\n    return this.http.delete(`${API_URL}/api/base/${baseId}`)\r\n      .map(r => r.json())\r\n  }\r\n\r\n  group_create(group: Group): Observable<Group> {\r\n    return this.http.post(`${API_URL}/api/group`, group)\r\n      .map(r => r.json())\r\n  }\r\n\r\n  group_list(baseId: string): Observable<Group[]> {\r\n    return this.http.get(`${API_URL}/api/group`)\r\n      .map(r => r.json())\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/_services/bases.service.ts","import { Injectable } from '@angular/core';\r\nimport { AuthHttp } from 'angular2-jwt';\r\nimport { Observable, BehaviorSubject } from 'rxjs/Rx';\r\nimport { API_URL } from '../_services/API_URL';\r\nimport { Group } from '../_models/group';\r\nimport { Colony } from '../_models/colony';\r\n\r\n@Injectable()\r\n\r\nexport class ColonyService {\r\n  constructor(\r\n    private http: AuthHttp\r\n  ) {}\r\n\r\n  colony_create(groupId: string, colony: Colony): Observable<Colony> {\r\n    return this.http.post(`${API_URL}/api/group/${groupId}/colony`, colony)\r\n      .map(r => r.json())\r\n  }\r\n\r\n  colony_by_group(groupId: string): Observable<Colony[]> {\r\n    return this.http.get(`${API_URL}/api/group/${groupId}/colony`)\r\n      .map(r => r.json())\r\n  }\r\n\r\n  colony_delete(colony_id: string): Observable<Colony> {\r\n    return this.http.delete(`${API_URL}/api/colony/${colony_id}`)\r\n      .map(r => r.json());\r\n  }\r\n\r\n  colony_list(): Observable<Colony[]> {\r\n    return this.http.get(`${API_URL}/api/colony`)\r\n      .map(r => r.json());\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/_services/colony.service.ts","import { Injectable } from '@angular/core';\r\nimport { AuthHttp } from 'angular2-jwt';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { API_URL } from '../_services/API_URL';\r\n\r\n@Injectable()\r\n\r\nexport class DriversService {\r\n  constructor(\r\n    private http: AuthHttp\r\n  ) {}\r\n\r\n  drivers_list(): Observable<any[]> {\r\n    return this.http.get(`${API_URL}/api/user/drivers`)\r\n      .map(r => r.json())\r\n  }\r\n\r\n  drivers_location(): Observable<any[]> {\r\n    return this.http.get(`${API_URL}/api/user/location`)\r\n      .map(r => r.json());\r\n  }\r\n\r\n  driver_details(driver_id: string): Observable<any> {\r\n    return this.http.get(`${API_URL}/api/user/${driver_id}/driver_details`)\r\n      .map(r => r.json());\r\n  }\r\n\r\n  driver_services(driver_id: string, time?: string): Observable<any> {\r\n    return this.http.get(`${API_URL}/api/service/driver/${driver_id}`, { params: { time }})\r\n      .map(r => r.json())\r\n  }\r\n\r\n  driver_reviews(driver_id: string): Observable<any> {\r\n    return this.http.get(`${API_URL}/api/user/${driver_id}/reviews`)\r\n      .map(r => r.json());\r\n  }\r\n\r\n  driver_reports(driver_id: string): Observable<any[]> {\r\n    return this.http.get(`${API_URL}/api/report/${driver_id}`)\r\n      .map(r => r.json());\r\n  }\r\n\r\n  disable_emergency(driver_id: string): Observable<any> {\r\n    return this.http.post(`${API_URL}/api/emergency_disable`, {}, {params: { driver_id }})\r\n      .map(r => r.json());\r\n  }\r\n\r\n  driver_inbox_create(driver_id: string, inbox: any): Observable<any> {\r\n    return this.http.post(`${API_URL}/api/driver/${driver_id}/inbox`, inbox)\r\n      .map(r => r.json())\r\n  }\r\n\r\n  driver_inbox_list(driver_id: string): Observable<any[]> {\r\n    return this.http.get(`${API_URL}/api/driver/${driver_id}/inbox`)\r\n      .map(r => r.json())\r\n  }\r\n\r\n  driver_update(driver_id: string, driver): Observable<any> {\r\n    return this.http.put(`${API_URL}/api/user/${driver_id}/driver_update`, driver)\r\n      .map(r => r.json())\r\n  }\r\n\r\n  driver_delete(driver_id: string): Observable<any> {\r\n    return this.http.delete(`${API_URL}/api/driver/${driver_id}/delete`)\r\n      .map(r => r.json())\r\n  }\r\n\r\n  notice_list(): Observable<any> {\r\n    return this.http.get(`${API_URL}/api/notice`)\r\n      .map(r => r.json());\r\n  }\r\n\r\n  notice_create(notice: any): Observable<any> {\r\n    return this.http.post(`${API_URL}/api/notice`, notice)\r\n      .map(r => r.json());\r\n  }\r\n\r\n  notice_delete(notice_id: string): Observable<any> {\r\n    return this.http.delete(`${API_URL}/api/notice/${notice_id}`)\r\n      .map(r => r.json());\r\n  }\r\n\r\n  reports_list(): Observable<any> {\r\n    return this.http.get(`${API_URL}/api/report`)\r\n      .map(r => r.json());\r\n  }\r\n\r\n  service_global(params): Observable<any[]> {\r\n    return this.http.get(`${API_URL}/api/global_service`, { params })\r\n      .map(r => r.json());\r\n  }\r\n\r\n  service_count(params): Observable<any> {\r\n    return this.http.get(`${API_URL}/api/service/counter`, { params })\r\n      .map(r => r.json());\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/_services/drivers.service.ts","import { Injectable } from '@angular/core';\r\nimport { AuthHttp } from 'angular2-jwt';\r\nimport { Observable, BehaviorSubject } from 'rxjs/Rx';\r\nimport { API_URL } from '../_services/API_URL';\r\nimport { Group } from '../_models/group';\r\n\r\n@Injectable()\r\n\r\nexport class GroupService {\r\n\r\n  constructor(\r\n    private http: AuthHttp\r\n  ) { }\r\n\r\n  group_by_base(baseId: string): Observable<Group[]> {\r\n    return this.http.get(`${API_URL}/api/base/${baseId}/group`)\r\n      .map(r => r.json());\r\n  }\r\n\r\n  group_create(baseId: string, group: Group): Observable<Group> {\r\n    return this.http.post(`${API_URL}/api/base/${baseId}/group`, group)\r\n      .map(r => r.json());\r\n  }\r\n\r\n  group_list_available(gp: any): Observable<Group[]> {\r\n    return this.http.get(`${API_URL}/api/group/place/available`, {params: gp})\r\n      .map(r => r.json());\r\n  }\r\n\r\n  group_list(): Observable<Group[]> {\r\n    return this.http.get(`${API_URL}/api/group`)\r\n      .map(r => r.json())\r\n  }\r\n\r\n  group_place_list(): Observable<any[]> {\r\n    return this.http.get(`${API_URL}/api/group/place`)\r\n      .map(r => r.json());\r\n  }\r\n\r\n  group_delete(baseId: string, groupId: string): Observable<any> {\r\n    return this.http.delete(`${API_URL}/api/base/${baseId}/group/${groupId}`)\r\n      .map( r => r.json());\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/_services/group.service.ts","import { Injectable } from '@angular/core';\r\nimport { AuthHttp } from 'angular2-jwt';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { API_URL } from '../_services/API_URL';\r\n\r\n@Injectable()\r\n\r\nexport class PlacesService {\r\n  constructor(\r\n    private http: AuthHttp\r\n  ) {}\r\n\r\n  places_list(): Observable<any[]> {\r\n    return this.http.get(`${API_URL}/api/place`)\r\n      .map(r => r.json())\r\n  }\r\n\r\n  places_by_base(baseId: string): Observable<any[]> {\r\n    return this.http.get(`${API_URL}/api/base/${baseId}/place`)\r\n      .map(r => r.json());\r\n  }\r\n\r\n  place_create(baseId: string, place: any): Observable<any> {\r\n    return this.http.post(`${API_URL}/api/base/${baseId}/place`, place)\r\n      .map(r => r.json());\r\n  }\r\n\r\n  place_delete(baseId: string, placeId: string): Observable<any> {\r\n    return this.http.delete(`${API_URL}/api/base/${baseId}/place/${placeId}`)\r\n      .map(r => r.json());\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/_services/places.service.ts","import { Injectable } from '@angular/core';\r\nimport { AuthHttp } from 'angular2-jwt';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { API_URL } from '../_services/API_URL';\r\n\r\n@Injectable()\r\n\r\nexport class SiteService {\r\n\r\n  constructor(\r\n    private http: AuthHttp\r\n  ) {}\r\n\r\n  sites_by_group(groupId: string): Observable<any[]> {\r\n    return this.http.get(`${API_URL}/api/group/${groupId}/site`)\r\n      .map(r => r.json());\r\n  }\r\n\r\n  site_create(groupId: string, site: any): Observable<any> {\r\n    return this.http.post(`${API_URL}/api/group/${groupId}/site`, site)\r\n      .map(r => r.json());\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/_services/site.service.ts","import { Injectable } from \"@angular/core\";\r\nimport { AuthHttp } from \"angular2-jwt\";\r\nimport { Tariff } from \"../_models/tariff\";\r\nimport { API_URL } from \"./API_URL\";\r\nimport { Observable } from 'rxjs/Rx';\r\n@Injectable()\r\n\r\nexport class TariffService {\r\n  constructor(\r\n    private http: AuthHttp\r\n  ) {}\r\n\r\n  tariff_create(tariff: Tariff): Observable<Tariff> {\r\n    return this.http.post(`${API_URL}/api/tariff`, tariff)\r\n      .map(r => r.json());\r\n  }\r\n\r\n  tariff_list(page: number = 1, baseId?: string, groupId?: string): Observable<any> {\r\n    return this.http.get(`${API_URL}/api/tariff`, { params: {page: page, base_id: baseId, group_id: groupId}})\r\n      .map(r => r.json());\r\n  }\r\n\r\n  tariff_delete(tariffId: string): Observable<Tariff> {\r\n    return this.http.delete(`${API_URL}/api/tariff/${tariffId}`)\r\n      .map(r => r.json());\r\n  }\r\n\r\n  tariff_update(tariff: any): Observable<Tariff> {\r\n    return this.http.put(`${API_URL}/api/tariff/${tariff._id}`, tariff)\r\n      .map(r => r.json());\r\n  }\r\n\r\n  tariff_update_all(quantity: any): Observable<any[]> {\r\n    return this.http.put(`${API_URL}/api/tariff/update/all`, quantity)\r\n      .map(r => r.json());\r\n  }\r\n\r\n  tariff_check(params): Observable<any> {\r\n    return this.http.get(`${API_URL}/api/tariff/check/admin`, {params: params })\r\n      .map(r => r.json());\r\n  }\r\n\r\n  tariff_check_groups(group1_id: string, group2_id: string) {\r\n    return this.http.get(`${API_URL}/api/tariff/groups/${group1_id}/${group2_id}`)\r\n      .map(r => r.json());\r\n  }\r\n\r\n  tariff_details(tariffId: string): Observable<any> {\r\n    return this.http.get(`${API_URL}/api/tariff/${tariffId}`)\r\n      .map(r => r.json());\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/_services/tariff.service.ts","module.exports = \"agm-map {\\r\\n    height: 600px;\\r\\n  }\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<router-outlet></router-outlet>\\r\\n<ng-snotify></ng-snotify>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { AuthHttp, AuthConfig } from 'angular2-jwt';\r\nimport { Http, RequestOptions } from '@angular/http';\r\nimport { NgSemanticModule } from 'ng-semantic';\r\nimport { AgmCoreModule } from '@agm/core';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\nimport { BarRatingModule } from \"ngx-bar-rating\";\r\nimport {NgxPaginationModule} from 'ngx-pagination';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './LoginComponent/login.component';\r\nimport { AuthenticationService } from './_services/authentication.service';\r\nimport { AuthGuard } from './_guards/authentication.guard';\r\nimport { DashboardComponent } from './DashboradComponent/dashboard.component';\r\nimport { BasesComponent } from './BasesComponent/bases.component';\r\nimport { BaseCreateComponent } from './BasesComponent/BaseCreateComponent/base.create.component';\r\nimport { BaseService } from './_services/bases.service';\r\nimport { BaseComponent } from './BasesComponent/BaseComponent/base.component';\r\nimport { GroupService } from './_services/group.service';\r\nimport { ColonyService } from './_services/colony.service';\r\nimport { TariffComponent } from './TariffComponent/tariff.component';\r\nimport { TariffService } from './_services/tariff.service';\r\nimport { DriversComponent } from './DriversComponent/drivers.component';\r\nimport { DriverFormComponent } from './DriversComponent/DriverFormComponent/driver.form.component';\r\nimport { DriversService } from './_services/drivers.service';\r\nimport { PlacesService } from './_services/places.service';\r\nimport { PlacesComponent } from './PlacesComponent/places.component';\r\nimport { SiteService } from './_services/site.service';\r\nimport { GroupsComponent } from './BasesComponent/BaseComponent/GroupsComponent/groups.component';\r\nimport { SnotifyModule, SnotifyService, ToastDefaults } from 'ng-snotify'\r\nimport { DriverComponent } from './DriversComponent/DriverComponent/driver.component';\r\nimport { ServicesComponent } from './DriversComponent/DriverComponent/ServicesComponent/services.component';\r\nimport { MessagesComponent } from './DriversComponent/DriverComponent/MessagesComponent/messages.component';\r\nimport { CheckTariffComponent } from './TariffComponent/CheckTariffComponent/check.tariff.component';\r\nimport { SearchTariffComponent } from './TariffComponent/SearchTariff/search.tariff.component';\r\nimport { EditTariffComponent } from './TariffComponent/EditTariffComponent/edit.tariff.component';\r\nimport { CommentsComponent } from './DriversComponent/DriverComponent/CommentsComponent/comments.component';\r\nimport { ReportsComponent } from './DriversComponent/DriverComponent/ReportsComponent/reports.component';\r\nimport { NoticeComponent } from './NoticeComponent/notice.component';\r\nimport { ReportDriversComponent } from './ReportDriversComponent/report.driver.component';\r\nimport { AreasComponent } from './BasesComponent/BaseComponent/AreasComponent/areas.component';\r\nimport { ColoniesComponent } from './BasesComponent/BaseComponent/ColoniesComponent/colonies.component';\r\nimport { GroupComponent } from './BasesComponent/BaseComponent/GroupComponent/group.component';\r\nimport { AreaService } from './_services/area.service';\r\nimport { GlobalServicesComponent } from './GlobalServicesComponent/global.services.component';\r\nimport { OwlDateTimeModule, OwlNativeDateTimeModule, OWL_DATE_TIME_LOCALE, OwlDateTimeIntl  } from 'ng-pick-datetime';\r\n\r\nexport function authHttpServiceFactory(http: Http, options: RequestOptions) {\r\n  return new AuthHttp(new AuthConfig({\r\n    headerPrefix: 'BEARER',\r\n    globalHeaders: [{ 'Content-Type': 'application/json' }]\r\n  }), http, options);\r\n}\r\n\r\nexport class DefaultInit extends OwlDateTimeIntl {\r\n  setBtnLabel = 'Establecer';\r\n  cancelBtnLabel = 'Cancelar';\r\n  rangeFromLabel = 'Desde';\r\n  rangeToLabel = 'A';\r\n}\r\n\r\nconst routes: Routes = [\r\n  { path: 'login', component: LoginComponent },\r\n  { path: '', redirectTo: 'dashboard', pathMatch: 'full'},\r\n  { path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard], children: [\r\n    { path: '', redirectTo: 'drivers', pathMatch: 'full'},\r\n    { path: 'bases', component: BasesComponent},\r\n    { path: 'bases/new', component: BaseCreateComponent},\r\n    { path: 'base/:id', component: BaseComponent, children: [\r\n      { path: '', redirectTo: 'groups', pathMatch: 'full' },\r\n      { path: 'groups', component: GroupsComponent, children: [\r\n        { path: 'group/:id', component: GroupComponent, children: [\r\n          { path: '', redirectTo: 'areas', pathMatch: 'full' },\r\n          /* { path: 'colonies', component: ColoniesComponent }, */\r\n          { path: 'areas', component: AreasComponent }\r\n        ]}\r\n      ] },\r\n      //  Esta ruta se deja de usar\r\n      { path: 'places', component: PlacesComponent }\r\n    ]},\r\n    { path: 'tariff', component: TariffComponent },\r\n    { path: 'drivers', component: DriversComponent },\r\n    { path: 'drivers/create', component: DriverFormComponent },\r\n    { path: 'driver/:id', component: DriverComponent, children: [\r\n      {path: '', redirectTo: 'services', pathMatch: 'full'},\r\n      {path: 'services', component: ServicesComponent},\r\n      { path: 'inbox', component: MessagesComponent},\r\n      { path: 'comments', component: CommentsComponent },\r\n      {path: 'reports', component: ReportsComponent}\r\n    ]},\r\n    { path: 'notices', component: NoticeComponent },\r\n    { path: 'reports', component: ReportDriversComponent },\r\n    {path: 'services', component: GlobalServicesComponent }\r\n  ]}\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    DashboardComponent,\r\n    BasesComponent,\r\n    BaseCreateComponent,\r\n    BaseComponent,\r\n    TariffComponent,\r\n    DriversComponent,\r\n    DriverFormComponent,\r\n    DriverComponent,\r\n    PlacesComponent,\r\n    GroupsComponent,\r\n    ServicesComponent,\r\n    MessagesComponent,\r\n    CheckTariffComponent,\r\n    SearchTariffComponent,\r\n    EditTariffComponent,\r\n    CommentsComponent,\r\n    ReportsComponent,\r\n    NoticeComponent,\r\n    ReportDriversComponent,\r\n    AreasComponent,\r\n    ColoniesComponent,\r\n    GroupComponent,\r\n    GlobalServicesComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    NgxPaginationModule,\r\n    FormsModule,\r\n    HttpModule,\r\n    ReactiveFormsModule,\r\n    NgSemanticModule,\r\n    SnotifyModule,\r\n    BarRatingModule,\r\n    RouterModule.forRoot(routes, {useHash: true}),\r\n    AgmCoreModule.forRoot({\r\n      apiKey: 'AIzaSyAn1XlqM5ds_ZrPavxj-Nh-rpJ3z5hBdXI',\r\n      libraries: ['places']\r\n    }),\r\n    OwlDateTimeModule,\r\n    OwlNativeDateTimeModule,\r\n    BrowserAnimationsModule\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: AuthHttp,\r\n      useFactory: authHttpServiceFactory,\r\n      deps: [Http, RequestOptions]\r\n    },\r\n    AuthenticationService,\r\n    AuthGuard,\r\n    BaseService,\r\n    GroupService,\r\n    ColonyService,\r\n    TariffService,\r\n    DriversService,\r\n    PlacesService,\r\n    SiteService,\r\n    { provide: 'SnotifyToastConfig', useValue: ToastDefaults },\r\n    SnotifyService,\r\n    AreaService,\r\n    { provide: OWL_DATE_TIME_LOCALE, useValue: 'mx' },\r\n    { provide: OwlDateTimeIntl, useClass: DefaultInit },\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}